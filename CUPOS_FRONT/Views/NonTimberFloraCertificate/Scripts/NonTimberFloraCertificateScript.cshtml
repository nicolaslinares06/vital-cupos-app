<script>

    //#region elemntos HTML
    var txtNumeroCertifiacdo = document.getElementById('txtNumeroCertifiacdo');
    var sltTipoDocumento = document.getElementById('sltTipoDocumento');
    var txtNumeroDocuemnto = document.getElementById('txtNumeroDocuemnto');
    var tituloBuscador = document.getElementById('tituloBuscador');
    var divVolverRegistrarCertificado = document.getElementById('divVolverRegistrarCertificado');
    var divPrincipal = document.getElementById('divPrincipal');
    var divSecundario = document.getElementById('divSecundario');

    var divConfirmacionMensaje = document.getElementById('divConfirmacionMensaje');
    var lblConfirmacion = document.getElementById('lblConfirmacion');
    var divSpinner3 = document.getElementById('divSpinner3');
    var divBotonAceptarConfirmacion = document.getElementById('divBotonAceptarConfirmacion');

    var divVinculos2 = document.getElementById('divVinculos2');
    var divVinculos1 = document.getElementById('divVinculos1');
    var tituloCertificado = document.getElementById('tituloCertificado');
    var spinnerButton = document.getElementById('spinnerButton');
    var tab1Content = document.getElementById('tab1');
    var btnSiguiente = document.getElementById('btnSiguiente');
    var btnCancelarRegistrarCertificado = document.getElementById('btnCancelarRegistrarCertificado');
    var btnGuardarRegistrarCertificado = document.getElementById('btnGuardarRegistrarCertificado');
    var divBotonesConfirmacion = document.getElementById('divBotonesConfirmacion');
    var divBtnsiGuardar = document.getElementById('divBtnsiGuardar');
    var divBtnSiEliminar = document.getElementById('divBtnSiEliminar');
    var divBtnSiCancelar = document.getElementById('divBtnSiCancelar');

    var txtPais = document.getElementById('txtPais');
    var txtNombre = document.getElementById('txtNombre');
    var txtDepartamento = document.getElementById('txtDepartamento');
    var txtNit = document.getElementById('txtNit');
    var txtCiudad = document.getElementById('txtCiudad');
    var txtTelefono = document.getElementById('txtTelefono');
    var txtCorreo = document.getElementById('txtCorreo');
    var txtDireccion = document.getElementById('txtDireccion');

    var txtAutoridadEmiteCertificado = document.getElementById('txtAutoridadEmiteCertificado');
    var txtNumeroCertificacion = document.getElementById('txtNumeroCertificacion');
    var txtFechaCertificacion = document.getElementById('txtFechaCertificacion');
    var txtVigenciaCertificacion = document.getElementById('txtVigenciaCertificacion');
    var chksTipoPermisoExportacion = document.getElementById('chksTipoPermisoExportacion');
    var chksTipoPermisoImportacion = document.getElementById('chksTipoPermisoImportacion');
    var divChecksTipoEspecímenesProductosImpExp = document.getElementById('divChecksTipoEspecímenesProductosImpExp');
    var formFileSoporte = document.getElementById('formFileSoporte');
    var txtObservacionesCertificado = document.getElementById('txtObservacionesCertificado');

    var divTableCertificados = document.getElementById('divTableCertificados');
    var accionText = document.getElementById('accionText');

    var divNumeroCertificado = document.getElementById('divNumeroCertificado');
    var divtipoCertificado = document.getElementById('divtipoCertificado');
    var divNumeroDocBtn = document.getElementById('divNumeroDocBtn');
    var divNumeroDocumento = document.getElementById('divNumeroDocumento');
    var divBtn = document.getElementById('divBtn');
    var ulCamposOblgatorios=document.getElementById('ulCamposOblgatorios');
    //#endregion

    $(document).ready(async function () {
        traerTiposEspecímenesProductosImpExp();
        tituloBuscador.innerText = "Flora";
        let url = '@Url.Action("ConsultDocumentsTypes", "NonTimberFloraCertificate")';
        traerTiposDocumento(sltTipoDocumento, url);
        TraerAutoridadEmite();
        await cargarTablaCertificados();
    });

    //#region variables
    let accionRegistrarCertificado = false;
    let tableCertificados;
    let adjuntoBase64 = '';
    let nombreAdjunto = '';
    let tipoAdjunto = '';
    let adjuntosSoporte = [];
    let contadorAdjuntos = 0;
    let accionGuardar = false;
    let accionEditar = false;
    let accionEliminar = false;
    let idCertificado = 0;
    let adjuntosSoporteNuevos = [];
    let adjuntosSoporteEliminar = [];
    let adjuntosSoporteOriginal = [];
    let accionCancelar = false;
    var chkExportacion = 0;
    var chkImportacion = 0;
    var tipoPermisoEnviar = [];
    var tipoEspecimenProductoImpExp = [];
    var tipoEspecímenesProductosImpExp = [];
    //#endregion


    //#region funciones

    //se traen los tipos de marcaje y se pintan en frontal de especie a exportar
    async function TraerAutoridadEmite(){
        let url = `@Url.Action("ConsultAuthority", "NonTimberFloraCertificate")`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        txtAutoridadEmiteCertificado.innerHTML='<option value="0">Seleccione Autoridad...</option>';
        r.forEach(el => {
            txtAutoridadEmiteCertificado.innerHTML +=
                `<option value="${el.code}">${el.name}</option>`
        });
    }

    async function traerTiposEspecímenesProductosImpExp() {
        let url = `@Url.Action("ConsultEspecimensProductsType", "NonTimberFloraCertificate")`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        tipoEspecímenesProductosImpExp = r;
        r.forEach(el => {
            divChecksTipoEspecímenesProductosImpExp.innerHTML +=
                `<div class="form-check">
                    <input class="form-check-input checkTiposEspecimenesProductos" name="TiposEspecímenesProductosImpExp" type="checkbox" value="${el.code}" id="check${el.code}">
                    <label class="form-check-label" for="flexCheckDefault">
                    ${el.name}
                    </label>
                </div>`
        });
    }

    function limpiarParaRegistrar(val=false) {
        if(!val){
            limpiarTodo();
        }

        if ($(divtipoCertificado).hasClass('col-md-2')) {
            $(divtipoCertificado).removeClass('col-md-2');
            $(divtipoCertificado).addClass('col-md-3');
        }

        if ($(divNumeroDocBtn).hasClass('col-md-10')) {
            $(divNumeroDocBtn).removeClass('col-md-10');
            $(divNumeroDocBtn).addClass('col-md-6');
        }

        if ($(divNumeroDocumento).hasClass('col-md-10')) {
            $(divNumeroDocumento).removeClass('col-md-10');
            $(divNumeroDocumento).addClass('col-md-6');
        }

        if ($(divBtn).hasClass('col-md-2')) {
            $(divBtn).removeClass('col-md-2');
            $(divBtn).addClass('col-md-6');
        }

        ocultarElemento(divNumeroCertificado, true);
        ocultarElemento(divTableCertificados, true);
        ocultarElemento(divBtnRegistrarCertificado, true);
        ocultarElemento(divVolverRegistrarCertificado, true);
    }

    function registrarCertificado() {
        limpiarParaRegistrar();
        if ($(divtipoCertificado).hasClass('col-md-3')) {
            $(divtipoCertificado).removeClass('col-md-3');
            $(divtipoCertificado).addClass('col-md-2');
        }

        if ($(divNumeroDocBtn).hasClass('col-md-6')) {
            $(divNumeroDocBtn).removeClass('col-md-6');
            $(divNumeroDocBtn).addClass('col-md-10');
        }

        if ($(divNumeroDocumento).hasClass('col-md-6')) {
            $(divNumeroDocumento).removeClass('col-md-6');
            $(divNumeroDocumento).addClass('col-md-10');
        }

        if ($(divBtn).hasClass('col-md-6')) {
            $(divBtn).removeClass('col-md-6');
            $(divBtn).addClass('col-md-2');
        }
        accionRegistrarCertificado = true;
        tituloBuscador.innerText = "Registrar certificado";
        ocultarElemento(divVolverRegistrarCertificado, false);
        $(sltTipoDocumento).val('0');
        $(txtNumeroDocuemnto).val('');
        $(txtNumeroCertifiacdo).val('');
    }

    async function limpiarTodo(val = false) {
        reiniciarTodosElementos();
        ocultarElemento(divSecundario, true);
        tituloBuscador.innerText = "Flora";
        accionRegistrarCertificado = false;
        ocultarElemento(divVolverRegistrarCertificado, true);
        ocultarElemento(divTableCertificados, false);
        ocultarElemento(divBtnRegistrarCertificado, false);
        $(sltTipoDocumento).val('0');
        $(txtNumeroDocuemnto).val('');
        ocultarElemento(divVinculos1, false);
        ocultarElemento(divVinculos2, true);
        limpiarCertificado();
        contadorAdjuntos = 0;
        adjuntosSoporte=[];
        adjuntosSoporteEliminar=[];
        adjuntosSoporteNuevos=[];
        documentosYaMostrados = [];
        accionGuardar = false;
        accionEditar = false;
        accionEliminar = false;
        accionCancelar = false;
        accionVer = false;
        idCertificado = 0;
        reiniciarSoloLeerControles();
        ocultarElemento(divPrincipal, false);
        if (val) {
            await cargarTablaCertificados();
            return;
        }
        limpiarModal();

    }


    function limpiarModal() {
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divBtnsiGuardar, true);
        ocultarElemento(divBtnSiCancelar, true);
        ocultarElemento(divBotonesConfirmacion, true);
        ocultarElemento(divConfirmacionMensaje, true);
        ocultarElemento(divBotonAceptarConfirmacion, true);
        ocultarElemento(divBtnSiEliminar, true);
    }

    function volverBuscador(val=false) {
        limpiarParaRegistrar(val);
        ocultarElemento(divNumeroCertificado, false);
        ocultarElemento(divTableCertificados, false);
        ocultarElemento(divBtnRegistrarCertificado, false);
    }

    async function cargarTablaCertificados(datos = null) {
        let r;
        if (datos == null) {
            let url = `@Url.Action("ConsultCertificates", "NonTimberFloraCertificate")`;
            r = await Get(url);
            if (r.volverInicio != undefined) {
                $('#modalConfimaciones').modal('hide');
                cerrarSesionCaducada();
                return;
            }
        }
        tableCertificados = $(`#tableCertificados`).DataTable({
            destroy: true,
            scrollX: true,
            lengthChange: true,
            lengthMenu: [5, 10, 20, 50, 100],
            paging: true,
            info: true,
            filter: false,
            dom: "<'row'<'col-md-12 text-end'<'d-flex align-items-center mt-1'<'col-md-10'l><'col-md-2'i>>>>" + "<'row'<'col-md-12'rt><'col-md-12 text-center'p>>",
            language: {
                lengthMenu: "Resultados pág. _MENU_",
                info: "_START_ al _TOTAL_ Resultados",
                search: '',
                searchPlaceholder: "Buscar",
                zeroRecords: "No se encontraron resultados",
                infoEmpty: "0 al 0 Resultados",
                paginate: {
                    previous: 'Anterior',
                    next: 'Siguiente'
                }
            },
            data: datos == null ? r : datos,
            columns: [
                {
                    "data": "codigoCertificado",
                    className: "d-none"
                },
                {
                    "data": "numeroCertificacion",
                },
                {
                    "data": "nit"
                },
                {
                    "data": "fechaRegistroCertificacion",
                    render: function (data) {
                        return moment(data).format('yyyy-MM-DD');
                    }
                },
                {
                    "data": "fechaCertificacion",
                    render: function (data) {
                        return moment(data).format('yyyy-MM-DD');
                    }
                },
                {
                    "data": "vigenciaCertificacion",
                    render: function (data) {
                        if (data != null) {
                            return moment(data).format('yyyy-MM-DD');
                        }
                        return data;
                    }
                },
                {
                    "data": "codigoCertificado",
                    render: function (data) {
                        return `<a type="button" class="btnDetalleCerticacion" data-bs-toggle="tooltip" data-bs-placement="top" title="Detalles">VER</a> / <a type="button" class="btnEditarCerticacion" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / 
                        <a type="button" class="btnEliminarCerticacion" data-bs-toggle="tooltip" data-bs-placement="top" title="Eliminar">ELIMINAR</a> 
                        <div class="spinner-border spinner-border-sm text-primary d-none" role="status" id="spinner${data}"> <span class="sr-only">Loading...</span></div>`
                    }
                }
            ],
            columnDefs: [{
                targets: 6
            }]

        });
        agregarClasesDatatable(`#tableCertificados`);
    }

    async function buscarCertificado() {

        if (accionRegistrarCertificado) {
            if (validacionCampos()) {
                limpiarModal();
                ocultarElemento(divSpinner3, false);
                $('#modalConfimaciones').modal('show');
                var url = `@Url.Action("ConsultEntityDates", "NonTimberFloraCertificate")` + `?DocumentType=${parseInt($(sltTipoDocumento).val())}&DocumentNumber=${parseInt($(txtNumeroDocuemnto).val())}`;
                let r = await Get(url);
                if (r.volverInicio != undefined) {
                    $('#modalConfimaciones').modal('hide');
                    cerrarSesionCaducada();
                    return;
                }
                if (r.length > 0) {
                    limpiarTodo();
                    accionEditar = false;
                    accionGuardar = true;
                    $(txtPais).val(r[0].pais);
                    $(txtNombre).val(r[0].nombreEmpresa);
                    $(txtDepartamento).val(r[0].departamento);
                    $(txtNit).val(r[0].nit);
                    $(txtCiudad).val(r[0].ciudad);
                    $(txtTelefono).val(r[0].telefono);
                    $(txtCorreo).val(r[0].correo);
                    $(txtDireccion).val(r[0].direccion);
                    lblConfirmacion.innerText = 'La entidad SI se encuentra registrada';
                    tituloCertificado.innerText = 'Registrar certificado';
                    loadTabs(1);
                    ocultarElemento(divPrincipal, true);
                    ocultarElemento(divSecundario, false);
                    ocultarElemento(divSpinner3, true);
                    ocultarElemento(divConfirmacionMensaje, false);
                    ocultarElemento(divBotonAceptarConfirmacion, false);
                    ocultarElemento(divVinculos1, true);
                    ocultarElemento(divVinculos2, false);
                    return
                }
                lblConfirmacion.innerText = 'La entidad NO se encuentra registrada';
                cargarTablaCertificados();
                ocultarElemento(divSpinner3, true);
                ocultarElemento(divConfirmacionMensaje, false);
                ocultarElemento(divBotonAceptarConfirmacion, false);
            }
            return;
        }
        if (validacionCampos(true)) {
            ocultarElemento(spinnerButton, false);
            if ($(txtNumeroDocuemnto).val() != '' && $(txtNumeroCertifiacdo).val() != '') {
                var url = `@Url.Action("ConsultCertificatesForNit", "NonTimberFloraCertificate")` + `?DocumentType=${parseInt($(sltTipoDocumento).val())}&DocumentNumber=${parseInt($(txtNumeroDocuemnto).val())}&CertificateNumber=${$(txtNumeroCertifiacdo).val()}`;
                let r = await Get(url);
                if (r.volverInicio != undefined) {
                    ocultarElemento(spinnerButton, true);
                    cerrarSesionCaducada();
                    return;
                }
                if (r.length == 0) {
                    limpiarModal();
                    lblConfirmacion.innerText = 'Número de registro no existe';
                    ocultarElemento(divConfirmacionMensaje, false);
                    ocultarElemento(divBotonAceptarConfirmacion, false);
                    $('#modalConfimaciones').modal('show');
                    cargarTablaCertificados();
                }
                else
                    cargarTablaCertificados(r);

            } else if ($(txtNumeroDocuemnto).val() != '' && $(txtNumeroCertifiacdo).val() == '') {
                var url = `@Url.Action("ConsultCertificatesForNit", "NonTimberFloraCertificate")` + `?DocumentType=${parseInt($(sltTipoDocumento).val())}&DocumentNumber=${parseInt($(txtNumeroDocuemnto).val())}`;
                let r = await Get(url);
                if (r.volverInicio != undefined) {
                    ocultarElemento(spinnerButton, true);
                    cerrarSesionCaducada();
                    return;
                }
                if (r.length == 0) {
                    limpiarModal();
                    lblConfirmacion.innerText = 'Número de registro no existe';
                    ocultarElemento(divConfirmacionMensaje, false);
                    ocultarElemento(divBotonAceptarConfirmacion, false);
                    $('#modalConfimaciones').modal('show');
                    cargarTablaCertificados();
                }
                else
                    cargarTablaCertificados(r);

            } else if ($(txtNumeroCertifiacdo).val() != '' && $(txtNumeroDocuemnto).val() == '') {
                var url = `@Url.Action("ConsultCertificatesForNit", "NonTimberFloraCertificate")` + `?DocumentType=${parseInt($(sltTipoDocumento).val())}&DocumentNumber=0&CertificateNumber=${$(txtNumeroCertifiacdo).val()}`;
                let r = await Get(url);
                if (r.volverInicio != undefined) {
                    ocultarElemento(spinnerButton, true);
                    cerrarSesionCaducada();
                    return;
                }
                if (r.length == 0) {
                    limpiarModal();
                    lblConfirmacion.innerText = 'Número de registro no existe';
                    ocultarElemento(divConfirmacionMensaje, false);
                    ocultarElemento(divBotonAceptarConfirmacion, false);
                    $('#modalConfimaciones').modal('show');
                    cargarTablaCertificados();
                }
                else
                    cargarTablaCertificados(r);
            } else {
                limpiarModal();
                lblConfirmacion.innerText = 'No se lleno ningun filtro';
                ocultarElemento(divConfirmacionMensaje, false);
                ocultarElemento(divBotonAceptarConfirmacion, false);
                $('#modalConfimaciones').modal('show');
            }
            $(sltTipoDocumento).val('0');
            $(txtNumeroDocuemnto).val('');
            $(txtNumeroCertifiacdo).val('');
            ocultarElemento(spinnerButton, true);
        }

    }

    function validacionCampos(val = false) {
        if (val) {
            if ($(txtNumeroDocuemnto).val() != '') {
                var validarsltTipoDocumento = validar(sltTipoDocumento, validacionsltTipoDocumento);
                if (validarsltTipoDocumento) {
                    return true;
                }
                return false;
            }
            return true;
        }
        var validarsltTipoDocumento = validar(sltTipoDocumento, validacionsltTipoDocumento);
        var validartxtNumeroDocuemnto = validar(txtNumeroDocuemnto, validaciontxtNumeroDocuemnto);

        if (validarsltTipoDocumento && validartxtNumeroDocuemnto) {
            return true;
        }
        return false;
    }


    function reiniciarTodosElementos() {
        reiniciarElementos(sltTipoDocumento, validacionsltTipoDocumento);
        reiniciarElementos(txtNumeroDocuemnto, validaciontxtNumeroDocuemnto);
    }

    function siguiente() {
        if ($(tab1Content).is(":visible")) {
            loadCertificado();
            return;
        }
        loadDatosEntidad();
    }

    function loadCertificado() {
        btnSiguiente.innerText = 'Anterior';
        ocultarElemento(btnGuardarRegistrarCertificado, false);
        ocultarElemento(btnCancelarRegistrarCertificado, false);
        loadTabs(2);
        if (accionVer) {
            ocultarElemento(btnGuardarRegistrarCertificado, true);
            soloLeerControles();
        }
    }

    function soloLeerControles() {
        disabledControl(txtAutoridadEmiteCertificado, true);
        readOnly(txtNumeroCertificacion, true);
        readOnly(txtFechaCertificacion, true);
        readOnly(txtVigenciaCertificacion, true);
        readOnly(txtObservacionesCertificado, true);
        $(".checkTiposEspecimenesProductos").prop("disabled", true);
        disabledControl(chksTipoPermisoExportacion, true);
        disabledControl(chksTipoPermisoImportacion, true);
        disabledControl(formFileSoporte, true);
    }

    function reiniciarSoloLeerControles() {
        disabledControl(txtAutoridadEmiteCertificado, false);
        readOnly(txtNumeroCertificacion, false);
        readOnly(txtFechaCertificacion, false);
        readOnly(txtVigenciaCertificacion, false);
        readOnly(txtObservacionesCertificado, false);
        $(".checkTiposEspecimenesProductos").prop("disabled", false);
        disabledControl(chksTipoPermisoExportacion, false);
        disabledControl(chksTipoPermisoImportacion, false);
        disabledControl(formFileSoporte, false);
    }

    function loadDatosEntidad() {
        limpiarCertificado(true);
        loadTabs(1);
    }

    //funcion para limpiar controles de certificado
    function limpiarCertificado(val = false) {
        btnSiguiente.innerText = 'Siguiente';
        ocultarElemento(btnGuardarRegistrarCertificado, true);
        ocultarElemento(btnCancelarRegistrarCertificado, true);
        if (!val) {
            reiniciarAdvertenciasControles();
            $(txtAutoridadEmiteCertificado).val('');
            $(txtNumeroCertificacion).val('');
            $(txtFechaCertificacion).val('');
            $(txtVigenciaCertificacion).val('');
            if ($(chksTipoPermisoExportacion).is(':checked')) {
                $(chksTipoPermisoExportacion).prop('checked', false);
            }
            if ($(chksTipoPermisoImportacion).is(':checked')) {
                $(chksTipoPermisoImportacion).prop('checked', false);
            }
            $(".checkTiposEspecimenesProductos").prop("checked", false);
            $(txtObservacionesCertificado).val('');
            divAdjunto.innerHTML = '';
            $(formFileSoporte).val('');
            adjuntosSoporte = [];
            adjuntoBase64 = '';
            nombreAdjunto = '';
            tipoAdjunto = '';
        }
    }

    //funcion para validar campos de certificado
    function validarCamposCertificado() {
        var validacionFechas=true;
        if ($(txtVigenciaCertificacion).val() <= $(txtFechaCertificacion).val()) {
            if (!$(txtFechaCertificacion).hasClass('required-validate')) {
                $(txtFechaCertificacion).addClass('required-validate');
                validaciontxtFechaCertificacion.innerText = 'La fecha de certificación debe ser menor a las de la vigencia';
                ocultarElemento(validaciontxtFechaCertificacion, false);
            }
            if (!$(txtVigenciaCertificacion).hasClass('required-validate')) {
                $(txtVigenciaCertificacion).addClass('required-validate');
                validaciontxtVigenciaCertificacion.innerText = 'La fecha de certificación debe ser menor a las de la vigencia';
                ocultarElemento(validaciontxtVigenciaCertificacion, false);
            }
            validacionFechas=false;
        }
        var validacionAutoridadEmiteCertificado = validar(txtAutoridadEmiteCertificado, validaciontxtAutoridadEmiteCertificado);
        var validacionNumeroCertificado = validar(txtNumeroCertificacion, validaciontxtNumeroCertificacion);
        var validacionFechaCertificado = validar(txtFechaCertificacion, validaciontxtFechaCertificacion);
        var validacionVigenciaCertificacion = validar(txtVigenciaCertificacion, validaciontxtVigenciaCertificacion);
        var validacionChksTipoPermiso = validar(null, validacionchksTipoPermiso, true);
        var validacionTiposEspecimenesProductosImpExp;
        if (tipoEspecimenProductoImpExp.length == 0) {
            validacionTiposEspecimenesProductosImpExp = false;
            ocultarElemento(validacionTipoEspecímenesProductosImpExp, false);
        } else {
            validacionTiposEspecimenesProductosImpExp = true;
        }

        var validacionDocSoporte;
        if (adjuntosSoporte.length == 0) {
            ocultarElemento(spanAdjuntos, false);
            if (!$(formFileSoporte).hasClass('required-validate')) {
                $(formFileSoporte).addClass('required-validate');
            }
            validacionDocSoporte = false;
        } else {
            validacionDocSoporte = true;
        }
        if (!validacionDocSoporte) {
            spanAdjuntos.innerText = 'Campo Obligatorio';
        }
        if (validacionNumeroCertificado && validacionFechaCertificado && validacionVigenciaCertificacion && validacionChksTipoPermiso
            && validacionDocSoporte && validacionAutoridadEmiteCertificado && validacionTiposEspecimenesProductosImpExp
            && validacionFechas) {
            return true;
        }
        var camposObligatorios=[];
        if(!validacionNumeroCertificado){
            camposObligatorios.push('Numero certificado');
        }
        if(!validacionFechaCertificado){
            camposObligatorios.push('Fecha certificado');
        }
        if(!validacionVigenciaCertificacion){
            camposObligatorios.push('Vigencia certificado');
        }
        if(!validacionChksTipoPermiso){
            camposObligatorios.push('Tipo de permiso');
        }
        if(!validacionDocSoporte){
            camposObligatorios.push('Documento de soporte');
        }
        if(!validacionAutoridadEmiteCertificado){
            camposObligatorios.push('Autoridad que emite certificado');
        }
        if(!validacionTiposEspecimenesProductosImpExp){
            camposObligatorios.push('Tipo de especímenes o productos a importar o exportar');
        }
        if(!validacionFechas){
            camposObligatorios.push('la fecha de Certificado debe ser menos a la fecha de vigencia');
        }
        
        alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);

        return false;
    }

    //funcion para reiniciar advertencias de controles
    function reiniciarAdvertenciasControles() {
        reiniciarElementos(txtAutoridadEmiteCertificado, validaciontxtAutoridadEmiteCertificado);
        reiniciarElementos(txtNumeroCertificacion, validaciontxtNumeroCertificacion);
        reiniciarElementos(txtFechaCertificacion, validaciontxtFechaCertificacion);
        ocultarElemento(validacionchksTipoPermiso, true);
        ocultarElemento(validacionTipoEspecímenesProductosImpExp, true);
        reiniciarElementos(txtVigenciaCertificacion, validaciontxtVigenciaCertificacion);
        reiniciarElementos(formFileSoporte, spanAdjuntos);
    }

    //funcion para guardar certificdo
    function guardarRegistrarCertificado() {
        tipoEspecimenProductoImpExp = [];
        let checkboxes = document.querySelectorAll('input[name="TiposEspecímenesProductosImpExp"]:checked');
        checkboxes.forEach((el) => {
            tipoEspecimenProductoImpExp.push(el.value);
        });
        if (validarCamposCertificado()) {
            limpiarModal();
            if ($('#btnNoConfimar').hasClass('btn btn-primary')) {
                $('#btnNoConfimar').removeClass('btn btn-primary');
                $('#btnNoConfimar').addClass('btn btn-secondary');
            }
            lblConfirmacion.innerText = '¿Está seguro de guardar la información?';
            ocultarElemento(divBtnsiGuardar, false);
            ocultarElemento(divBotonesConfirmacion, false);
            ocultarElemento(divConfirmacionMensaje, false);
            $('#modalConfimaciones').modal('show');
        }
    }

    function noConfirmaciones() {
        if ($('#btnNoConfimar').hasClass('btn btn-secondary')) {
            $('#btnNoConfimar').removeClass('btn btn-secondary');
            $('#btnNoConfimar').addClass('btn btn-primary');
        }
    }

    //funcion para el boton cancelar
    function CancelarRegistrarCertificado(val = false) {
        accionCancelar = val;
        limpiarModal();
        lblConfirmacion.innerText = '¿Está seguro que desea cancelar? ';
        if (accionVer) {
            lblConfirmacion.innerText = '¿Está seguro de que desea salir?';
        }
        ocultarElemento(divBtnSiCancelar, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divConfirmacionMensaje, false);
        $('#modalConfimaciones').modal('show');
    }

    //funcion que ejecuta el cancelar
    async function siGuardar() {
        noConfirmaciones();
        if (accionGuardar) {
            limpiarModal();
            ocultarElemento(divSpinner3, false);
            var datosGuardar = {
                'codigo': null,
                'autoridadEmiteCertificacion': $(txtAutoridadEmiteCertificado).val(),
                'numeroCertificado': $(txtNumeroCertificacion).val(),
                'fechaCertificacion': $(txtFechaCertificacion).val(),
                'vigenciaCertificacion': $(txtVigenciaCertificacion).val(),
                'tipoPermiso': tipoPermisoEnviar.join('|'),
                'tipoEspecimenProductoImpExp': tipoEspecimenProductoImpExp.join('|'),
                'observacionesCertificado': $(txtObservacionesCertificado).val(),
                'nitEmpresa': parseInt($(txtNit).val()),
                'documentosSoporte': adjuntosSoporte
            }
            let url = `@Url.Action("SaveCertificate","NonTimberFloraCertificate")`;
            let val = await Get(url, datosGuardar);
            if (val.volverInicio != undefined) {
                $('#modalConfimaciones').modal('hide');
                cerrarSesionCaducada();
                return;
            }
            ocultarElemento(divSpinner3, true);
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonAceptarConfirmacion, false);
            if (val) {
                lblConfirmacion.innerText = 'Su información ha sido guardada con éxito';
            } else {
                lblConfirmacion.innerText = 'Su información no ha sido guardada con éxito';
                return;
            }
            accionGuardar = false;
            limpiarTodo(true);
            volverBuscador(true);
            return;
        }
        if (accionEditar) {
            limpiarModal();
            ocultarElemento(divSpinner3, false);
            var datosGuardar = {
                'codigo': idCertificado,
                'autoridadEmiteCertificacion': $(txtAutoridadEmiteCertificado).val(),
                'numeroCertificado': $(txtNumeroCertificacion).val(),
                'fechaCertificacion': $(txtFechaCertificacion).val(),
                'vigenciaCertificacion': $(txtVigenciaCertificacion).val(),
                'tipoPermiso': tipoPermisoEnviar.join('|'),
                'tipoEspecimenProductoImpExp': tipoEspecimenProductoImpExp.join('|'),
                'observacionesCertificado': $(txtObservacionesCertificado).val(),
                'nitEmpresa': parseInt($(txtNit).val()),
                'documentosSoporteNuevo': adjuntosSoporteNuevos,
                'documentosSoporteEliminar': adjuntosSoporteEliminar
            }
            let url = `@Url.Action("SaveEditCertificate","NonTimberFloraCertificate")`;
            let val = await Get(url, datosGuardar);
            if (val.volverInicio != undefined) {
                $('#modalConfimaciones').modal('hide');
                cerrarSesionCaducada();
                return;
            }
            ocultarElemento(divSpinner3, true);
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonAceptarConfirmacion, false);
            if (val) {
                lblConfirmacion.innerText = 'Su información ha sido guardada con éxito';
            } else {
                lblConfirmacion.innerText = 'Su información no ha sido guardada con éxito';
                return;
            }
            accionEditar = false;
            limpiarTodo(true);
            volverBuscador(true);
            return;
        }
    }

    function siCancelar() {
        $('#modalConfimaciones').modal('hide');
        limpiarTodo();
        volverBuscador(true);
        btnCancelarRegistrarCertificado.innerText = 'Cancelar';
    }
    //se valida si los elementos estan vacios
    function validar(elemento, span, val = false, elemento2 = null) {
        //se valida si alguno de los checks de es aprovechamiento esta seleccionado
        if (val) {
            if ($(chksTipoPermisoExportacion).is(':checked')) {
                return true;
            }
            if ($(chksTipoPermisoImportacion).is(':checked')) {
                return true;
            }
            ocultarElemento(span, false);
            return false;
        }
        //se validan elementos de input normales si estan llenos
        if ($(elemento).val()== null || $(elemento).val()== undefined || $(elemento).val() == '' || $(elemento).val() == '0' || $(elemento).val() == 0 || $(elemento).val().length == 0) {
            ocultarElemento(span, false);
            if (elemento2 != null) {
                if (!elemento2.hasClass('required-validate')) {
                    elemento2.addClass('required-validate');
                    span.innerText = 'Campo obligatorio';
                }
                return false;
            }
            if (!$(elemento).hasClass('required-validate')) {
                $(elemento).addClass('required-validate');
                span.innerText = 'Campo obligatorio';
            }
            return false;
        }
        return true;
    }

    async function llenarControles(nit = 0) {
        ocultarElemento(`#spinner${idCertificado}`, false);
        let url = `@Url.Action("ConsultDatasCertificate","NonTimberFloraCertificate")` + `?codeCertificate=${idCertificado}`;
        let val = await Get(url);

        url = `@Url.Action("ConsultEntityDates", "NonTimberFloraCertificate")` + `?DocumentType=95&DocumentNumber=${nit}`;
        let r = await Get(url);

        if (r.volverInicio != undefined || val.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }

        $(txtPais).val(r[0].pais);
        $(txtNombre).val(r[0].nombreEmpresa);
        $(txtDepartamento).val(r[0].departamento);
        $(txtNit).val(r[0].nit);
        $(txtCiudad).val(r[0].ciudad);
        $(txtTelefono).val(r[0].telefono);
        $(txtCorreo).val(r[0].correo);
        $(txtDireccion).val(r[0].direccion);

        $(txtAutoridadEmiteCertificado).val(val.autoridadEmiteCertificacion);
        $(txtNumeroCertificacion).val(val.numeroCertificado);
        $(txtFechaCertificacion).val(moment(val.fechaCertificacion).format('yyyy-MM-DD'));
        $(txtVigenciaCertificacion).val(moment(val.vigenciaCertificacion).format('yyyy-MM-DD'));
        let tiposPermisos = val.tipoPermiso.split("|");
        tipoPermisoEnviar = tiposPermisos;
        if (tiposPermisos.includes("48")) {
            $(chksTipoPermisoImportacion).prop('checked', true);
        }
        if (tiposPermisos.includes("47")) {
            $(chksTipoPermisoExportacion).prop('checked', true);
        }
        var tipoEspecimenProducto = val.tipoEspecimenProductoImpExp.split("|");
        tipoEspecimenProducto.forEach(el => {
            var element = parseInt(el);
            $(`#check${element}`).prop("checked", true)
        });
        $(txtObservacionesCertificado).val(val.observacionesCertificado);
        adjuntosSoporte = val.documentosSoporte;
        adjuntosSoporteOriginal.push(...adjuntosSoporte);
        adjuntosSoporte.forEach(el => {
            cargarAdjuntos(el.codigo, el.nombreAdjunto);
        });
        loadTabs(1);
        ocultarElemento(divPrincipal, true);
        ocultarElemento(divSecundario, false);
        ocultarElemento(divVinculos1, true);
        ocultarElemento(divVinculos2, false);
        ocultarElemento(`#spinner${idCertificado}`, true);
    }

    async function siEliminarCertificacion() {
        limpiarModal();
        ocultarElemento(divSpinner3, false);
        let url = `@Url.Action("DeleteCertificate","NonTimberFloraCertificate")`;
        let val = await Get(url, { 'codeCertificate': idCertificado });
        if (val.volverInicio != undefined) {
            $('#modalConfimaciones').modal('hide');
            cerrarSesionCaducada();
            return;
        }
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonAceptarConfirmacion, false);
        lblConfirmacion.innerText = 'Su información ha sido eliminada con éxito';
        accionEliminar = false;
        await cargarTablaCertificados();
    }
    //#region eventos

    //se realiza validacion de docuemto de soporte de anulacion para ver si es .pdf o .docx, tambien se envia html para que lo muestre

    //evento boton editar tabla cupos por año

    $('#tableCertificados tbody').on('click', '.btnEliminarCerticacion', function () {
        accionEliminar = true;
        idCertificado = parseInt($(this).parents("tr").find("td")[0].innerText);
        limpiarModal();
        lblConfirmacion.innerText = '¿Está seguro que desea eliminar la información?';
        ocultarElemento(divBtnSiEliminar, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divConfirmacionMensaje, false);
        $('#modalConfimaciones').modal('show');
        $(sltTipoDocumento).val('0');
        $(txtNumeroDocuemnto).val('');
        $(txtNumeroCertifiacdo).val('');
    });

    $('#tableCertificados tbody').on('click', '.btnEditarCerticacion', function () {
        limpiarTodo();
        accionEditar = true;
        idCertificado = parseInt($(this).parents("tr").find("td")[0].innerText);
        var nit = parseInt($(this).parents("tr").find("td")[2].innerText);
        tituloCertificado.innerText = 'Editar Certificado';
        llenarControles(nit);
        $(sltTipoDocumento).val('0');
        $(txtNumeroDocuemnto).val('');
        $(txtNumeroCertifiacdo).val('');
    });

    $('#tableCertificados tbody').on('click', '.btnDetalleCerticacion', function () {
        limpiarTodo();
        accionVer = true;
        idCertificado = parseInt($(this).parents("tr").find("td")[0].innerText);
        var nit = parseInt($(this).parents("tr").find("td")[2].innerText);
        tituloCertificado.innerText = 'Ver Certificado';
        btnCancelarRegistrarCertificado.innerText = 'Salir';
        llenarControles(nit);
        $(sltTipoDocumento).val('0');
        $(txtNumeroDocuemnto).val('');
        $(txtNumeroCertifiacdo).val('');
    });


    chksTipoPermisoExportacion.addEventListener('click', function () {
        ocultarElemento(validacionchksTipoPermiso, true);
        if (chkExportacion == 1) {
            $(chksTipoPermisoExportacion).prop('checked', false);
            chkExportacion = 0;
            tipoPermisoEnviar = tipoPermisoEnviar.filter(p => p != $(chksTipoPermisoExportacion).val());
            return;
        }
        tipoPermisoEnviar.push($(chksTipoPermisoExportacion).val());
        chkExportacion = 1;
    });

    chksTipoPermisoImportacion.addEventListener('click', function () {
        ocultarElemento(validacionchksTipoPermiso, true);
        if (chkImportacion == 1) {
            $(chksTipoPermisoImportacion).prop('checked', false);
            chkImportacion = 0;
            tipoPermisoEnviar = tipoPermisoEnviar.filter(p => p != $(chksTipoPermisoImportacion).val());
            return;
        }
        tipoPermisoEnviar.push($(chksTipoPermisoImportacion).val());
        chkImportacion = 1;
    });


    // #region se reinician elementos con eventos
    $(sltTipoDocumento).on('change', function () {
        reiniciarElementos(sltTipoDocumento, validacionsltTipoDocumento);
    });

    $(txtNumeroDocuemnto).on('change', function () {
        reiniciarElementos(txtNumeroDocuemnto, validaciontxtNumeroDocuemnto);
    });

    $(txtAutoridadEmiteCertificado).on('change', function () {
        reiniciarElementos(txtAutoridadEmiteCertificado, validaciontxtAutoridadEmiteCertificado);
    });

    $(txtNumeroCertificacion).on('change', function () {
        reiniciarElementos(txtNumeroCertificacion, validaciontxtNumeroCertificacion);
    });

    $(txtFechaCertificacion).on('change', function () {
        reiniciarElementos(txtFechaCertificacion, validaciontxtFechaCertificacion);
        if ($(txtVigenciaCertificacion).val() != '') {
            if ($(txtVigenciaCertificacion).val() < $(txtFechaCertificacion).val()) {
                if (!$('#txtFechaCertificacion').hasClass('required-validate')) {
                    $('#txtFechaCertificacion').addClass('required-validate');
                    validaciontxtFechaCertificacion.innerText = 'La fecha de certificación debe ser menor a la fecha de vigencia';
                    ocultarElemento('#validaciontxtFechaCertificacion', false);
                }
            }else{
                reiniciarElementos(txtVigenciaCertificacion, validaciontxtVigenciaCertificacion);
            }
        }
    });

    $(txtVigenciaCertificacion).on('change', function () {
        reiniciarElementos(txtVigenciaCertificacion, validaciontxtVigenciaCertificacion);
        if ($(txtFechaCertificacion).val() != '') {
            if ($(txtVigenciaCertificacion).val() < $(txtFechaCertificacion).val()) {
                if (!$('#txtVigenciaCertificacion').hasClass('required-validate')) {
                    $('#txtVigenciaCertificacion').addClass('required-validate');
                    validaciontxtVigenciaCertificacion.innerText = 'La fecha de certificación debe ser menor a la fecha de vigencia';
                    ocultarElemento('#validaciontxtVigenciaCertificacion', false);
                }
            }else{
                reiniciarElementos(txtFechaCertificacion, validaciontxtFechaCertificacion);
            }
        }
    });

    $('#divChecksTipoEspecímenesProductosImpExp').on('click', '.checkTiposEspecimenesProductos', function () {
        ocultarElemento(validacionTipoEspecímenesProductosImpExp, true);
    });
    // #endregion


    $(divAdjunto).on('click', '.btnPrevisualizar', function (e) {
        var cadena = e.target.parentElement.firstElementChild.id;
        var id = cadena.replace(/btnPrevisualizar/i, "");
        var adjunto = adjuntosSoporte.find(p => p.codigo == parseInt(id));
        var newWindow = window.open();
        newWindow.document.write('<iframe src=' + adjunto.adjuntoBase64 + ' style="height:100%; width:100%;"></iframe>');
    });
    $(divAdjunto).on('click', '.btnEliminarAdjunto', function (e) {
        var cadena = e.target.parentElement.id;
        var id = cadena.replace(/btnEliminarAdjunto/i, "");
        var adjunto = adjuntosSoporte.find(p => p.codigo == parseInt(id));
        adjuntosSoporte = adjuntosSoporte.filter(p => p.codigo != adjunto.codigo);
        adjuntosSoporteNuevos = adjuntosSoporteNuevos.filter(p => p.codigo != adjunto.codigo);
        
        $(formFileSoporte).val('');
        if (accionEditar) {
            var validar = adjuntosSoporteOriginal.find(p => p.codigo == parseInt(id));
            if (validar != null && validar != undefined) {
                adjuntosSoporteEliminar.push(validar);
            }
        }
        var hijo = document.getElementById(`divAdjunto${adjunto.codigo}`);
        divAdjunto.removeChild(hijo);
    });

    $('#formFileSoporte').on('change', async function () {
        reiniciarElementos(formFileSoporte, spanAdjuntos);
        adjuntoBase64 = '';
        nombreAdjunto = '';
        tipoAdjunto = '';
        var dato_archivo = $('#formFileSoporte').prop("files")[0];
        if (dato_archivo.size > 2000000) {
            spanAdjuntos.innerText = 'Tamaño maximo permitido es de 2MB';
            ocultarElemento(spanAdjuntos, false);
            dato_archivo = '';
            $(formFileSoporte).val('');
            return;
        }
        tipoAdjunto = dato_archivo.type;
        if (tipoAdjunto == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" || tipoAdjunto == "application/pdf" || tipoAdjunto == "image/jpeg" || tipoAdjunto == "image/png" || "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") {
            nombreAdjunto = dato_archivo.name;
            adjuntoBase64 = await toBase64(dato_archivo);
            var mayor = 0;
            if (adjuntosSoporte.length > 0) {
                adjuntosSoporte.forEach(el => {
                    if (parseInt(el.codigo) > mayor) {
                        mayor = parseInt(el.codigo);
                    }
                });
            }
            if (adjuntosSoporteOriginal.length > 0) {
                adjuntosSoporteOriginal.forEach(el => {
                    if (parseInt(el.codigo) > mayor) {
                        mayor = parseInt(el.codigo);
                    }
                });
            }
            var codigo = mayor = 0 ? 1 : mayor + 1;
            adjuntosSoporte.push({
                'codigo': codigo,
                'nombreAdjunto': nombreAdjunto,
                'adjuntoBase64': adjuntoBase64,
                'tipoAdjunto': tipoAdjunto
            });
            cargarAdjuntos(codigo, nombreAdjunto);
            $(formFileSoporte).val('');
            if (accionEditar) {
                adjuntosSoporteNuevos.push({
                    'codigo': codigo,
                    'nombreAdjunto': nombreAdjunto,
                    'adjuntoBase64': adjuntoBase64,
                    'tipoAdjunto': tipoAdjunto
                });
            }
            return;
        }
        tipoAdjunto = '';
        spanAdjuntos.innerText = 'Solo se admiten tipos de documentos .pdf, .docx, .xlsx, .jpeg y .png';
        ocultarElemento(spanAdjuntos, false);
        dato_archivo = '';
        $(formFileSoporte).val('');
    });

    function cargarAdjuntos(codigo, nombre) {
        
    

        if (accionVer) {
            divAdjunto.innerHTML += `<div class="row w-100 mt-2 contenerAdjuntos" id="divAdjunto${codigo}">
                      <div class="col-11">
                          <a type="buttton" class="btnPrevisualizar" id="btnPrevisualizar${codigo}">${nombre}</a>
                      </div>
                  <div>`;

            $("#divAdjuntoArrastreArchivo").addClass("d-none");
        } else {
            divAdjunto.innerHTML += `<div class="row w-100 mt-2 contenerAdjuntos" id="divAdjunto${codigo}">
                      <div class="col-11">
                          <a type="buttton" class="btnPrevisualizar" id="btnPrevisualizar${codigo}">${nombre}</a>
                      </div>
                      <div class="text-end col-1">
                          <a type="button" class="btnEliminarAdjunto" id="btnEliminarAdjunto${codigo}"><span class="fas fa-times"></span></a>
                      <div>
                  <div>`;
            
             $("#divAdjuntoArrastreArchivo").removeClass("d-none");
        }
    }

    fileContenedorMultipleFile.addEventListener('dragover', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).addClass('activeFile');
    });

    fileContenedorMultipleFile.addEventListener('dragleave', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).removeClass('activeFile');
    });

    fileContenedorMultipleFile.addEventListener('drop', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).removeClass('activeFile');
        var files = e.dataTransfer.files;
        var extencionesPermitidas = ["application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/pdf", "image/jpeg", "image/png", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"];
        var strExtenciones = ".pdf, .doc, .png, .jpeg, .xlsx";
        for (const file of files) {
            mostrarAdjunto(file, divAdjunto, spanAdjuntos, extencionesPermitidas, strExtenciones, null, adjuntosSoporte, true, adjuntosSoporteNuevos, adjuntosSoporteOriginal);
        };
        $('#formFileSoporte').val('');
    });

</script>
