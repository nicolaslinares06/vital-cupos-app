<script>

    //elementos HTML
    var divPrincipal = document.getElementById('divPrincipal');
    var divSecundario = document.getElementById('divSecundario');
    var tituloResolucion = document.getElementById('tituloResolucion');

    var tab1Content = document.getElementById('tab1');
    var tab2Content = document.getElementById('tab2');
    var tab1Input = document.getElementById('nav-1');
    var tab2Input = document.getElementById('nav-2');
    var btnSalir = document.getElementById('btnSalir');
    var btnGuardar = document.getElementById('btnGuardar');
    var divBtnSiCancelar = document.getElementById('divBtnSiCancelar');

    var divConfirmacionMensaje = document.getElementById('divConfirmacionMensaje');
    var lblConfirmacion = document.getElementById('lblConfirmacion');
    var divSpinner3 = document.getElementById('divSpinner3');
    var divBotonAceptarConfirmacion = document.getElementById('divBotonAceptarConfirmacion');
    var divBotonesConfirmacion = document.getElementById('divBotonesConfirmacion');
    var divBtnSiGuardar = document.getElementById('divBtnSiGuardar');
    var divBtnSiEliminar = document.getElementById('divBtnSiEliminar');

    var sltTipoDocumento = document.getElementById('sltTipoDocumento');
    var txtNumeroDocuemnto = document.getElementById('txtNumeroDocuemnto');
    var spinnerButton = document.getElementById('spinnerButton');
    var divTablas = document.getElementById('divTablas');

    var txtPais = document.getElementById('txtPais');
    var txtNombre = document.getElementById('txtNombre');
    var txtDepartamento = document.getElementById('txtDepartamento');
    var txtNit = document.getElementById('txtNit');
    var txtCiudad = document.getElementById('txtCiudad');
    var txtTelefono = document.getElementById('txtTelefono');
    var txtCorreo = document.getElementById('txtCorreo');
    var txtDireccion = document.getElementById('txtDireccion');

    var txtNombreRes = document.getElementById('txtNombreRes');
    var txtNitRes = document.getElementById('txtNitRes');
    var txtNumeroResolucion = document.getElementById('txtNumeroResolucion');
    var txtFechaResolucion = document.getElementById('txtFechaResolucion');
    var txtFechaInicio = document.getElementById('txtFechaInicio');
    var txtFechaFin = document.getElementById('txtFechaFin');
    var formFileSoporte = document.getElementById('formFileSoporte');
    var txtObjetoResolucion = document.getElementById('txtObjetoResolucion');
    var fileContenedorIndividualFile=document.getElementById('fileContenedorIndividualFile');
    var ulCamposOblgatorios=document.getElementById('ulCamposOblgatorios');
    //variables
    var datosEntidad;
    var codigoEmpresa = 0;
    var adjuntoBase64 = '';
    var nombreAdjunto = '';
    var tipoAdjunto = '';
    var accionGuardar = false;
    var accionCancelar = false;
    var accionEditar = false;
    var accionVer = false;
    var idResolucion = 0;
    var accionVerDetalleEntidad = false;

    $(document).ready(async function () {
        traerTiposDocumento();
    });


    //funciones

    async function traerTiposDocumento() {
        let url = `@Url.Action("ConsultDocumentsTypes", "NonTimberFloraCertificate")`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        sltTipoDocumento.innerHTML =
            `<option value="0">Tipo de documento</option>`
        r.forEach(el => {
            sltTipoDocumento.innerHTML +=
                `<option value="${el.code}">${el.name}</option>`
        });
    }

    function validacionCampos() {

        var validarsltTipoDocumento = validar(sltTipoDocumento, validacionsltTipoDocumento);
        var validartxtNumeroDocuemnto = validar(txtNumeroDocuemnto, validaciontxtNumeroDocuemnto);

        if (validarsltTipoDocumento && validartxtNumeroDocuemnto) {
            return true;
        }
        return false;
    }

    //se valida si los elementos estan vacios
    function validar(elemento, span, val = false, elemento2 = null) {
        //se valida si alguno de los checks de es aprovechamiento esta seleccionado
        if (val) {
            if ($(chksTipoPermisoExportacion).is(':checked')) {
                return true;
            }
            if ($(chksTipoPermisoImportacion).is(':checked')) {
                return true;
            }
            ocultarElemento(span, false);
            return false;
        }
        //se validan elementos de input normales si estan llenos
        if ($(elemento).val() == '' || $(elemento).val() == '0' || $(elemento).val() == 0 || $(elemento).val().length == 0) {
            ocultarElemento(span, false);
            if (elemento2 != null) {
                if (!elemento2.hasClass('required-validate')) {
                    elemento2.addClass('required-validate');
                }
                return false;
            }
            if (!$(elemento).hasClass('required-validate')) {
                $(elemento).addClass('required-validate');
            }
            return false;
        }
        return true;
    }

    async function buscarEntidad() {

        ocultarElemento(spinnerButton, false);
        if (validacionCampos()) {
            await cargarTablaEntidad();
        }
        ocultarElemento(spinnerButton, true);
    }

    async function cargarTablaEntidad() {
        let url = `@Url.Action("ConsultEntityDates", "ControlFishRequest")` + `?DocumentType=${parseInt($(sltTipoDocumento).val())}&DocumentNumber=${parseInt($(txtNumeroDocuemnto).val())}`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        $(`#tableEntidad`).DataTable({
            destroy: true,
            scrollX: true,
            lengthChange: true,
            lengthMenu: [5, 10, 20],
            paging: true,
            info: true,
            filter: false,
            dom:
                "<'row'<'col-md-12 text-end'<'d-flex align-items-center mt-1'<'col-md-10'l><'col-md-2'i>>>>" +
                "<'row'<'col-md-12'rt><'col-md-12 text-center'p>>",
            language: {
                lengthMenu: "Resultados pág. _MENU_",
                info: "_START_ al _TOTAL_ Resultados",
                search: "",
                searchPlaceholder: "Buscar",
                zeroRecords: "No se encontraron resultados",
                infoEmpty: "0 al 0 Resultados",
                paginate: {
                    previous: "Anterior",
                    next: "Siguiente",
                },
            },
            data: r,
            columns: [
                {
                    "data": "tipoDocumento"
                },
                {
                    "data": "nit"
                },
                {
                    "data": "nombreEmpresa"
                },
                {
                    "data": "correo"
                },
                {
                    "data": "telefono"
                },
                {
                    render: function () {
                        return '<a type="button" class="btnDetalleEntidad" data-bs-toggle="tooltip" data-bs-placement="top" title="Detalles">VER</a> / <a type="button" class="btnRegistrarResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Registrar resolucion de permiso de comercializacion de peces">REGISTRAR RESOLUCIÓN</a>';
                    },
                    className: "text-center"
                },
            ],
            columnDefs: [{
                targets: 5
            }]
        });
        agregarClasesDatatable(`#tableEntidad`);
        if (r.length > 0) {
            datosEntidad = r;
            codigoEmpresa = datosEntidad[0].codigoEmpresa;
            await cargarTablaResolucionesPeces();
            ocultarElemento(divTablas, false);
        } else {
            limpiarModal();
            ocultarElemento(divTablas, true);
            lblConfirmacion.innerText = 'La entidad NO se encuentra registrada';
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonAceptarConfirmacion, false);
            $('#modalConfimaciones').modal('show');
        }
    }

    async function cargarTablaResolucionesPeces() {
        let url = `@Url.Action("ConsultPermitsReslution", "ControlFishRequest")` + `?codeBussines=${codigoEmpresa}`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        $(`#tableResoluciones`).DataTable({
            destroy: true,
            scrollX: true,
            lengthChange: true,
            lengthMenu: [5, 10, 20, 50, 100],
            paging: true,
            info: true,
            dom:
                "<'row'<'col-md-12'f><'col-md-12 text-end'<'d-flex align-items-center mt-1'<'col-md-10'l><'col-md-2'i>>>>" +
                "<'row'<'col-md-12'rt><'col-md-12 text-center'p>>",
            language: {
                lengthMenu: "Resultados pág. _MENU_",
                info: "_START_ al _TOTAL_ Resultados",
                search: "",
                searchPlaceholder: "Buscar",
                zeroRecords: "No se encontraron resultados",
                infoEmpty: "0 al 0 Resultados",
                paginate: {
                    previous: "Anterior",
                    next: "Siguiente",
                },
            },
            data: r,
            columns: [
                {
                    "data": "codigoResolucion",
                    className: "d-none"
                },
                {
                    "data": "numeroResolucion",
                    className: "td-1"
                },
                {
                    "data": "fechaResolucion",
                    render: function (data) {
                        if (data != null) {
                            return moment(data).format('yyyy-MM-DD');
                        }
                        return data;
                    }
                },
                {
                    "data": "fechaInicio",
                    render: function (data) {
                        if (data != null) {
                            return moment(data).format('yyyy-MM-DD');
                        }
                        return data;
                    }
                },
                {
                    "data": "fechaFin",
                    render: function (data) {
                        if (data != null) {
                            return moment(data).format('yyyy-MM-DD');
                        }
                        return data;
                    }
                },
                {
                    "data": "objetoResolucion"
                },
                {
                    "data": "codigoResolucion",
                    render: function (data) {
                        return `<a type="button" class="btnDetalleResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Detalles">VER</a> / 
                        <a type="button" class="btnEditarResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / 
                        <a type="button" class="btnEliminarResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Eliminar">ELIMINAR</a>
                        <div class="spinner-border spinner-border-sm text-primary d-none" role="status" id="spinner${data}"> <span class="sr-only">Loading...</span></div>`;
                    },
                    className: "text-center"
                },
            ],
            columnDefs: [{
                targets: 6
            }]
        });
        agregarClasesDatatable(`#tableResoluciones`);
    }

    function limpiarTodo() {
        tituloResolucion.innerText = '';
        btnSalir.innerText = "Salir";
        ocultarElemento(divPrincipal, false);
        ocultarElemento(divSecundario, true);
        ocultarElemento(tab1Content, true);
        ocultarElemento(tab2Content, true);
        ocultarElemento(tab1Input, true);
        ocultarElemento(tab2Input, true);
        ocultarElemento(btnSalir, true);
        ocultarElemento(btnGuardar, true);
        accionGuardar = false;
        accionCancelar = false;
        accionVer = false;
        limpiarFormResolucion();
        reiniciarTodosElementos();
        reiniciarReadOnly();
    }

    function limpiarFormResolucion() {

        $(txtNombreRes).val('');
        $(txtNitRes).val('');
        $(txtNumeroResolucion).val('');
        $(txtFechaResolucion).val('');
        $(txtFechaInicio).val('');
        $(txtFechaFin).val('');
        $(txtObjetoResolucion).val('');

        adjuntoBase64 = '';
        nombreAdjunto = '';
        tipoAdjunto = '';

        divAdjunto.innerHTML = '';
        $(formFileSoporte).val('');
    }

    function salir() {
        limpiarModal();
        accionCancelar = true;
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divBtnSiCancelar, false);
        if (accionVerDetalleEntidad || accionVer) {
            accionVerDetalleEntidad = false;
            lblConfirmacion.innerText = '¿Está seguro que desea salir?';
        } else {
            lblConfirmacion.innerText = '¿Está seguro que desea cancelar?';
        }
        $('#modalConfimaciones').modal('show');
    }

    function guardarResolucion() {
        if (validacionCamposResolucion()) {
            limpiarModal();
            if ($('#btnNoConfimar').hasClass('btn btn-primary')) {
                $('#btnNoConfimar').removeClass('btn btn-primary');
                $('#btnNoConfimar').addClass('btn btn-secondary');
            }
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonesConfirmacion, false);
            ocultarElemento(divBtnSiGuardar, false);
            lblConfirmacion.innerText = '¿Está seguro de guardar la información? ';
            $('#modalConfimaciones').modal('show');
        }
    }

    function asignacionDatos(validar = false) {
        let datos;
        if (validar) {
            datos = {
                'codigoResolucion': idResolucion,
                'codigoEmpresa': codigoEmpresa,
                'numeroResolucion': $(txtNumeroResolucion).val(),
                'fechaResolucion': $(txtFechaResolucion).val(),
                'fechaInicio': $(txtFechaInicio).val(),
                'fechaFin': $(txtFechaFin).val(),
                'adjunto': {
                    'adjuntoBase64': adjuntoBase64,
                    'nombreAdjunto': nombreAdjunto,
                    'tipoAdjunto': tipoAdjunto
                },
                'objetoResolucion': $(txtObjetoResolucion).val()
            }
            return datos;
        }
        datos = {
            'codigoEmpresa': codigoEmpresa,
            'numeroResolucion': $(txtNumeroResolucion).val(),
            'fechaResolucion': $(txtFechaResolucion).val(),
            'fechaInicio': $(txtFechaInicio).val(),
            'fechaFin': $(txtFechaFin).val(),
            'adjunto': {
                'adjuntoBase64': adjuntoBase64,
                'nombreAdjunto': nombreAdjunto,
                'tipoAdjunto': tipoAdjunto
            },
            'objetoResolucion': $(txtObjetoResolucion).val()
        }
        return datos;
    }

    function noConfirmaciones() {
        if ($('#btnNoConfimar').hasClass('btn btn-secondary')) {
            $('#btnNoConfimar').removeClass('btn btn-secondary');
            $('#btnNoConfimar').addClass('btn btn-primary');
        }
    }

    function SiCancelar() {
        limpiarModal();
        limpiarTodo();
        $('#modalConfimaciones').modal('hide');
        return;
    }

    async function SiGuardar() {
        noConfirmaciones();
        limpiarModal();
        ocultarElemento(divSpinner3, false);
        let datos;
        let url;
        if (accionEditar) {
            datos = asignacionDatos(true);
            url = `@Url.Action("EditResolution","ControlFishRequest")`;
        } else {
            datos = asignacionDatos();
            url = `@Url.Action("SaveResolution","ControlFishRequest")`;
        }
        let val = await Get(url, datos);
        if (val.volverInicio != undefined) {
            $("#modalConfimaciones").modal("hide");
            cerrarSesionCaducada();
            return;
        }
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonAceptarConfirmacion, false);
        if (val) {
            lblConfirmacion.innerText = 'Su información ha sido guardada con éxito';
        } else {
            lblConfirmacion.innerText = 'Su información no ha sido guardada con éxito';
            return;
        }
        accionGuardar = false;
        accionEditar = false;
        limpiarTodo();
        await cargarTablaResolucionesPeces();
        return;
    }

    function limpiarModal() {
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divBtnSiGuardar, true);
        ocultarElemento(divBotonesConfirmacion, true);
        ocultarElemento(divConfirmacionMensaje, true);
        ocultarElemento(divBotonAceptarConfirmacion, true);
        ocultarElemento(divBtnSiEliminar, true);
        ocultarElemento(divBtnSiCancelar, true);
    }

    function validacionCamposResolucion() {

        var validacionFechas=true;
        if ($(txtFechaFin).val() <= $(txtFechaInicio).val()) {
            if (!$(txtFechaInicio).hasClass('required-validate')) {
                $(txtFechaInicio).addClass('required-validate');
                validaciontxtFechaInicio.innerText = 'La fecha inicio debe ser menor a la fecha fin';
                ocultarElemento(validaciontxtFechaInicio, false);
            }
            if (!$(txtFechaFin).hasClass('required-validate')) {
                $(txtFechaFin).addClass('required-validate');
                validaciontxtFechaFin.innerText = 'La fecha inicio debe ser menor a la fecha fin';
                ocultarElemento(validaciontxtFechaFin, false);
            }
            validacionFechas=false;
        }

        var validartxtNumeroResolucion = validar(txtNumeroResolucion, validaciontxtNumeroResolucion);
        var validartxtFechaResolucion = validar(txtFechaResolucion, validaciontxtFechaResolucion);
        var validartxtFechaInicio = validar(txtFechaInicio, validaciontxtFechaInicio);
        var validarfechaFin = validar(txtFechaFin, validaciontxtFechaFin);
        var validarObjetoResolucion = validar(txtObjetoResolucion, spanObjetoResolucion);

        var validacionDocSoporte;

        if (adjuntoBase64 == '' || nombreAdjunto == '' || tipoAdjunto == '') {
            spanAdjuntos.innerText="Campo obligatorio";
            ocultarElemento(spanAdjuntos, false);
            if (!$(formFileSoporte).hasClass('required-validate')) {
                $(formFileSoporte).addClass('required-validate');
            }
            validacionDocSoporte = false;
        } else {
            validacionDocSoporte = true;
        }

        if (validartxtNumeroResolucion && validartxtFechaResolucion && validartxtFechaInicio && validarfechaFin && validacionDocSoporte && validarObjetoResolucion && validacionFechas) {
            return true;
        }
        var camposObligatorios=[];
        if(!validartxtNumeroResolucion){
            camposObligatorios.push('Numero de resolución');
        }
        if(!validartxtFechaResolucion){
            camposObligatorios.push('Fecha resolución');
        }
        if(!validartxtFechaInicio){
            camposObligatorios.push('Fecha inicio');
        }
        if(!validarfechaFin){
            camposObligatorios.push('Fecha fin');
        }
        if(!validacionDocSoporte){
            camposObligatorios.push('Documento de soporte');
        }
        if(!validarObjetoResolucion){
            camposObligatorios.push('Objeto de la resolucion');
        }
        if(!validacionFechas){
            camposObligatorios.push('la fecha inicio debe ser menos a la fecha fin');
        }
        
        alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);
        return false;
    }

    function reiniciarTodosElementos() {
        reiniciarElementos(txtNumeroResolucion, validaciontxtNumeroResolucion);
        reiniciarElementos(txtFechaResolucion, validaciontxtFechaResolucion);
        reiniciarElementos(txtFechaInicio, validaciontxtFechaInicio);
        reiniciarElementos(txtFechaFin, validaciontxtFechaFin);
        reiniciarElementos(txtObjetoResolucion, spanObjetoResolucion);
        reiniciarElementos(formFileSoporte, spanAdjuntos);
    }

    async function llenarControlesResolucion() {
        ocultarElemento(`#spinner${idResolucion}`, false);
        let url = `@Url.Action("ConsultOnePermitResolution","ControlFishRequest")` + `?codeReslution=${idResolucion}`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        $(txtNumeroResolucion).val(r.numeroResolucion);
        $(txtFechaResolucion).val(moment(r.fechaResolucion).format('yyyy-MM-DD'));
        $(txtFechaInicio).val(moment(r.fechaInicio).format('yyyy-MM-DD'));
        $(txtFechaFin).val(moment(r.fechaFin).format('yyyy-MM-DD'));
        $(txtObjetoResolucion).val(r.objetoResolucion);

        adjuntoBase64 = r.adjunto.adjuntoBase64;
        nombreAdjunto = r.adjunto.nombreAdjunto;
        tipoAdjunto = r.adjunto.tipoAdjunto;
        crearArchivo(nombreAdjunto, adjuntoBase64);
        loadTabs(2);
        ocultarElemento(tab2Input, false);
        ocultarElemento(`#spinner${idResolucion}`, true);
    }

    function readonlyElementos() {
        readOnly(txtNumeroResolucion, true);
        readOnly(txtFechaResolucion, true);
        readOnly(txtFechaInicio, true);
        readOnly(txtFechaFin, true);
        readOnly(txtObjetoResolucion, true);
        disabledControl(formFileSoporte, true);
    }

    function reiniciarReadOnly() {
        readOnly(txtNumeroResolucion, false);
        readOnly(txtFechaResolucion, false);
        readOnly(txtFechaInicio, false);
        readOnly(txtFechaFin, false);
        readOnly(txtObjetoResolucion, false);
        disabledControl(formFileSoporte, false);
    }

    async function siEliminarResolucion() {
        limpiarModal();
        ocultarElemento(divSpinner3, false);
        let url = `@Url.Action("DeleteResolution","ControlFishRequest")`;
        let val = await Get(url, { 'codeResolution': idResolucion });
        if (val.volverInicio != undefined) {
            $('#modalConfimaciones').modal('hide');
            cerrarSesionCaducada();
            return;
        }
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonAceptarConfirmacion, false);
        lblConfirmacion.innerText = 'Su información ha sido eliminada con éxito';
        await cargarTablaResolucionesPeces();
    }
    //eventos

    $('#tableEntidad tbody').on('click', '.btnDetalleEntidad', function () {
        limpiarTodo();
        tituloResolucion.innerText = 'Entidad';
        loadTabs(1);
        accionVerDetalleEntidad = true;
        $(txtPais).val(datosEntidad[0].pais);
        $(txtNombre).val(datosEntidad[0].nombreEmpresa);
        $(txtDepartamento).val(datosEntidad[0].departamento);
        $(txtNit).val(datosEntidad[0].nit);
        $(txtCiudad).val(datosEntidad[0].ciudad);
        $(txtTelefono).val(datosEntidad[0].telefono);
        $(txtCorreo).val(datosEntidad[0].correo);
        $(txtDireccion).val(datosEntidad[0].direccion);
        ocultarElemento(tab1Input, false);
        ocultarElemento(tab1Content, false);
        ocultarElemento(btnSalir, false);
        ocultarElemento(divPrincipal, true);
        ocultarElemento(divSecundario, false);
    });

    $('#tableEntidad tbody').on('click', '.btnRegistrarResolucion', function () {
        limpiarTodo();
        tituloResolucion.innerText = 'Registrar resolución';
        loadTabs(2);
        ocultarElemento(tab2Input, false);
        accionGuardar = true;
        accionEditar = false;
        $(txtNombreRes).val(datosEntidad[0].nombreEmpresa);
        $(txtNitRes).val(datosEntidad[0].nit);
        btnSalir.innerText = "Cancelar";
        ocultarElemento(btnSalir, false);
        ocultarElemento(btnGuardar, false);
        ocultarElemento(tab2Content, false);
        ocultarElemento(divPrincipal, true);
        ocultarElemento(divSecundario, false);
    });

    $('#tableResoluciones tbody').on('click', '.btnEditarResolucion', async function () {
        limpiarTodo();
        tituloResolucion.innerText = 'Editar resolución';
        accionEditar = true;
        accionGuardar = false;
        idResolucion = $(this).parents("tr").find("td")[0].innerText;
        $(txtNombreRes).val(datosEntidad[0].nombreEmpresa);
        $(txtNitRes).val(datosEntidad[0].nit);
        await llenarControlesResolucion();
        btnSalir.innerText = "Cancelar";
        ocultarElemento(btnSalir, false);
        ocultarElemento(btnGuardar, false);
        ocultarElemento(tab2Content, false);
        ocultarElemento(divPrincipal, true);
        ocultarElemento(divSecundario, false);
    });

    $('#tableResoluciones tbody').on('click', '.btnDetalleResolucion', async function () {
        limpiarTodo();
        tituloResolucion.innerText = 'Ver detalles resolución';
        accionEditar = false;
        accionGuardar = false;
        accionVer = true;
        idResolucion = $(this).parents("tr").find("td")[0].innerText;
        $(txtNombreRes).val(datosEntidad[0].nombreEmpresa);
        $(txtNitRes).val(datosEntidad[0].nit);
        await llenarControlesResolucion();
        readonlyElementos();
        btnSalir.innerText = "Salir";
        ocultarElemento(btnSalir, false);
        ocultarElemento(tab2Content, false);
        ocultarElemento(divPrincipal, true);
        ocultarElemento(divSecundario, false);
    });

    $('#tableResoluciones tbody').on('click', '.btnEliminarResolucion', function () {
        limpiarModal();
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divBtnSiEliminar, false);
        idResolucion = parseInt($(this).parents("tr").find("td")[0].innerText);
        lblConfirmacion.innerText = '¿Está seguro que desea inactivar la resolución? ';
        $('#modalConfimaciones').modal('show');
        accionEditar = false;
        accionGuardar = false;
        accionVer = false;
    });

    $(sltTipoDocumento).on('change', function () {
        reiniciarElementos(sltTipoDocumento, validacionsltTipoDocumento);
    });

    $(txtNumeroDocuemnto).on('change', function () {
        reiniciarElementos(txtNumeroDocuemnto, validaciontxtNumeroDocuemnto);
    });

    $(txtNumeroResolucion).on('change', function () {
        reiniciarElementos(txtNumeroResolucion, validaciontxtNumeroResolucion);
    });

    $(txtFechaResolucion).on('change', function () {
        reiniciarElementos(txtFechaResolucion, validaciontxtFechaResolucion);
    });

    $(txtFechaInicio).on('change', function () {
        reiniciarElementos(txtFechaInicio, validaciontxtFechaInicio);
        if ($(txtFechaFin).val() != '') {
            if ($(txtFechaFin).val() < $(txtFechaInicio).val()) {
                if (!$('#txtFechaInicio').hasClass('required-validate')) {
                    $('#txtFechaInicio').addClass('required-validate');
                    validaciontxtFechaInicio.innerText = 'La fecha inicio debe ser menor a la fecha fin';
                    ocultarElemento('#validaciontxtFechaInicio', false);
                }
            }else{
                reiniciarElementos(txtFechaFin, validaciontxtFechaFin);
            }
        }
    });

    $(txtFechaFin).on('change', function () {
        reiniciarElementos(txtFechaFin, validaciontxtFechaFin);
        if ($(txtFechaInicio).val() != '') {
            if ($(txtFechaFin).val() < $(txtFechaInicio).val()) {
                if (!$('#txtFechaFin').hasClass('required-validate')) {
                    $('#txtFechaFin').addClass('required-validate');
                    validaciontxtFechaFin.innerText = 'La fecha inicio debe ser menor a la fecha fin';
                    ocultarElemento('#validaciontxtFechaFin', false);
                }
            }else{
                reiniciarElementos(txtFechaInicio, validaciontxtFechaInicio);
            }
        }
    });

    $(txtObjetoResolucion).on('change', function () {
        reiniciarElementos(txtObjetoResolucion, spanObjetoResolucion);
    });


    $('#formFileSoporte').on('change', async function () {
        reiniciarElementos(formFileSoporte, spanAdjuntos);
        ocultarElemento(spanAdjuntos, true);
        adjuntoBase64 = '';
        nombreAdjunto = '';
        tipoAdjunto = '';
        var dato_archivo = $('#formFileSoporte').prop("files")[0];
        if (dato_archivo.size > 2000000) {
            spanAdjuntos.innerText = 'Tamaño maximo permitido es de 2MB';
            ocultarElemento(spanAdjuntos, false);
            dato_archivo = '';
            $(formFileSoporte).val('');
            return;
        }
        tipoAdjunto = dato_archivo.type;
        if (tipoAdjunto == "application/vnd.openxmlformats-officedocument.wordprocessingml.document" || tipoAdjunto == "application/pdf" || tipoAdjunto == "image/jpeg" || tipoAdjunto == "image/png" || "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet") {
            nombreAdjunto = dato_archivo.name;
            adjuntoBase64 = await toBase64(dato_archivo);
            crearArchivo(nombreAdjunto, adjuntoBase64);
            return;
        }
        tipoAdjunto = '';
        spanAdjuntos.innerText = 'Solo se admiten tipos de documentos .pdf, .docx, .jpeg y .png';
        if ($(spanAdjuntos).hasClass('d-none')) {
            $(spanAdjuntos).removeClass('d-none')
        }
        dato_archivo = '';
        $(formFileSoporte).val('');
    });

    function crearArchivo(nombre, adjuntoBase64) {
        if (accionVer) {
            divAdjunto.innerHTML = `<div class="row w-100 mt-2 contenerAdjuntos">
                  <div class="col-11">
                      <a type="buttton" id="btnPrevisualizar">${nombre}</a>
                  </div>
              <div>`;
        } else {
            divAdjunto.innerHTML = `<div class="row w-100 mt-2 contenerAdjuntos">
                  <div class="col-11">
                      <a type="buttton" id="btnPrevisualizar">${nombre}</a>
                  </div>
                  <div class="text-end col-1">
                      <a type="button" id="btnEliminarAdjunto"><span class="fas fa-times"></span></a>
                  <div>
              <div>`;
        }
        ocultarElemento(fileContenedorIndividualFile, true);
        $('#btnPrevisualizar').on('click', function () {
            var newWindow = window.open();
            newWindow.document.write('<iframe src=' + adjuntoBase64 + ' style="height:100%; width:100%;"></iframe>');
        });
        $('#btnEliminarAdjunto').on('click', function () {
            divAdjunto.innerHTML = '';
            ocultarElemento(fileContenedorIndividualFile, false);
            $(formFileSoporte).val('');
        });
    }

    fileContenedorIndividualFile.addEventListener('dragover', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorIndividualFile).addClass('activeFile');
    });

    fileContenedorIndividualFile.addEventListener('dragleave', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorIndividualFile).removeClass('activeFile');
    });

    fileContenedorIndividualFile.addEventListener('drop', async (e) => {
        e.preventDefault();
        divAdjunto.innerHTML = "";
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorIndividualFile).removeClass('activeFile');
        var files = e.dataTransfer.files;
        if (files.length > 1) {
            spanAdjuntos.innerText = 'Solo se admite un adjunto.';
            ocultarElemento(spanAdjuntos, false);
            return
        }
        var extencionesPermitidas = ["application/pdf", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "image/jpeg", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "image/png"];
        var strExtenciones = ".pdf, .docx, .xlsx, .jpeg, .png";
        var adjunto = await mostrarAdjunto(files[0], divAdjunto, spanAdjuntos, extencionesPermitidas, strExtenciones, fileContenedorIndividualFile);
        adjuntoBase64 = adjunto.adjuntoBase64;
        nombreAdjunto = adjunto.nombreAdjunto;
        tipoAdjunto = adjunto.tipoAdjunto;
    });

</script>
