<script>

    //#region variales HTML
    var divBtnHistorialCuposDatosEntidad = document.getElementById('divBtnHistorialCuposDatosEntidad');
    var divDatosEntidad = document.getElementById('divDatosEntidad');
    var divModalHistorialCupos = document.getElementById('divModalHistorialCupos');
    var tab1Content = document.getElementById('tab1');
    var tab3Content = document.getElementById('tab3');
    var tab3Input = document.getElementById('nav-3');
    var btnSiguiente = document.getElementById('btnSiguiente');
    var mensajeEncontro = document.getElementById('mensajeEncontro');
    var txtResolutionNumbre = document.getElementById('txtResolutionNumbre');
    var btnSalirControl = document.getElementById('btnSalirControl');
    var divBtnSiEliminarAgregado = document.getElementById('divBtnSiEliminarAgregado');
    var divBtnSiLimpiarEspecieExportar = document.getElementById('divBtnSiLimpiarEspecieExportar');
    var listTotalCuposVer = document.getElementById('listTotalCuposVer');

    var txtEntidad = document.getElementById('txtEntidad');
    var txtPais = document.getElementById('txtPais');
    var txtNombre = document.getElementById('txtNombre');
    var txtDepartamento = document.getElementById('txtDepartamento');
    var txtNit = document.getElementById('txtNit');
    var txtCiudad = document.getElementById('txtCiudad');
    var txtTelefono = document.getElementById('txtTelefono');
    var txtCorreo = document.getElementById('txtCorreo');
    var txtDireccion = document.getElementById('txtDireccion');
    var divSpinner = document.getElementById('divSpinner');
    var divVerEspeciesExportar = document.getElementById('divVerEspeciesExportar');

    var divregistrarResolucion = document.getElementById('divregistrarResolucion');
    var divTableCuposAnio = document.getElementById('divTableCuposAnio');
    var btnAgregarRegistroCuposAnio = document.getElementById('btnAgregarRegistroCuposAnio');

    var btnSiguienteRegistrarResolucion = document.getElementById('btnSiguienteRegistrarResolucion');
    var btnGuardarRegistrarResolucion = document.getElementById('btnGuardarRegistrarResolucion');
    var btnAceptarModal = document.getElementById('btnAceptarModal');
    var btnSiModal = document.getElementById('btnSiModal');
    var btnNoModal = document.getElementById('btnNoModal');
    var divBtnAceptarModal = document.getElementById('divBtnAceptarModal');
    var divBtnSiModal = document.getElementById('divBtnSiModal');
    var divBtnNoModal = document.getElementById('divBtnNoModal');
    var divChecksTipoMarcaje = document.getElementById('divChecksTipoMarcaje');
    var sltTipoEspecimenValido = document.getElementById('sltTipoEspecimenValido');
    var btnAgregar = document.getElementById('btnAgregar');
    var divTxtCuposRegistrar = document.getElementById('divTxtCuposRegistrar');
    var divBtnAgregarRegistroCuposAnio = document.getElementById('divBtnAgregarRegistroCuposAnio');
    var divBtnAgregar = document.getElementById('divBtnAgregar');
    var divObservacionesEspecieExportar = document.getElementById('divObservacionesEspecieExportar');
    var divSpinner2 = document.getElementById('divSpinner2');
    var idListAdvertencia = document.getElementById('idListAdvertencia');
    var divBtnSiEliminar = document.getElementById('divBtnSiEliminar');
    var divBotonesConfirmacion = document.getElementById('divBotonesConfirmacion');
    var lblConfirmacion = document.getElementById('lblConfirmacion');
    var divBtnSiGuardar = document.getElementById('divBtnSiGuardar');
    var btnLimpiarEspecie = document.getElementById('btnLimpiarEspecie');

    //#region controles registrar resolucion

    var txtAutoridadEmiteResolucion = document.getElementById('txtAutoridadEmiteResolucion');
    var txtCodigoZoocriadero = document.getElementById('txtCodigoZoocriadero');
    var txtnumeroResolucion = document.getElementById('txtnumeroResolucion');
    var txtFechaResolucion = document.getElementById('txtFechaResolucion');
    var txtTotalCuposOtorgados = document.getElementById('txtTotalCuposOtorgados');
    var txtAnioProduccion = document.getElementById('txtAnioProduccion');
    var txtCuposRegistrar = document.getElementById('txtCuposRegistrar');
    var txtCuotaRepoblacion = document.getElementById('txtCuotaRepoblacion');
    var txtObservaciones = document.getElementById('txtObservaciones');

    var txtNombreEspecie = document.getElementById('txtNombreEspecie');
    var txtAnioProduccionEspecimen = document.getElementById('txtAnioProduccionEspecimen');
    var txtMarcaLote = document.getElementById('txtMarcaLote');
    var txtCondicionesMarcaje = document.getElementById('txtCondicionesMarcaje');
    var txtMachos = document.getElementById('txtMachos');
    var txtHembras = document.getElementById('txtHembras');
    var txtTotalPoblacion = document.getElementById('txtTotalPoblacion');
    var txtSalioIncubadora = document.getElementById('txtSalioIncubadora');
    var txtPoblacionDispCupos = document.getElementById('txtPoblacionDispCupos');
    var txtIndividuasRepoblacion = document.getElementById('txtIndividuasRepoblacion');
    var txtNumeroMortalidad = document.getElementById('txtNumeroMortalidad');
    var txtCuposAprovechamientoOtorgados = document.getElementById('txtCuposAprovechamientoOtorgados');
    var txtTasaReposicion = document.getElementById('txtTasaReposicion');
    var chkSiEsAprovechamiento = document.getElementById('chkSiEsAprovechamiento');
    var chkNoEsAprovechamiento = document.getElementById('chkNoEsAprovechamiento');
    var sltPagoCuotaRepoblacion = document.getElementById('sltPagoCuotaRepoblacion');
    var txtCuposAprovOtorgPagada = document.getElementById('txtCuposAprovOtorgPagada');
    var txtFechaRadicado = document.getElementById('txtFechaRadicado');
    var formFileSoporte = document.getElementById('formFileSoporte');
    var txtObservacionesEspecieExportar = document.getElementById('txtObservacionesEspecieExportar');
    var divBotonAceptarConfirmacion = document.getElementById('divBotonAceptarConfirmacion');
    var divSpinner3 = document.getElementById('divSpinner3');
    var divConfirmacionMensaje = document.getElementById('divConfirmacionMensaje');
    var divMensajeModal1 = document.getElementById('divMensajeModal1');

    //#region elememntos span para validaion que esten llenos los obligatorios

    var validacionNombreEspecie = document.getElementById('validacionNombreEspecie');
    var tituloAccionResolucion = document.getElementById('tituloAccionResolucion');
    var tituloAccionEspecieExportar = document.getElementById('tituloAccionEspecieExportar');

    //#endregion

    //html ajustes
    var txtNumeroInternoInicial = document.getElementById('txtNumeroInternoInicial');
    var txtNumeroInternoFinal = document.getElementById('txtNumeroInternoFinal');
    var txtFechaRegistroResolucion = document.getElementById('txtFechaRegistroResolucion');
    var divSoloRegistrarEspecies = document.getElementById('divSoloRegistrarEspecies');
    var sltEspecimen = document.getElementById('sltEspecimen');
    var divCuotaRepoblacion = document.getElementById('divCuotaRepoblacion');
    var CheckSeRealizoPagoCuotaRepoblacion = document.getElementById('CheckSeRealizoPagoCuotaRepoblacion');
    var txtnumeroInternoInicialCuotaRepoblacion = document.getElementById('txtnumeroInternoInicialCuotaRepoblacion');
    var txtnumeroInternoFinalCuotaRepoblacion = document.getElementById('txtnumeroInternoFinalCuotaRepoblacion');
    var fileContenedorMultipleFile = document.getElementById('fileContenedorMultipleFile');
    var ulCamposOblgatorios = document.getElementById('ulCamposOblgatorios');
    let divEstadisticas=document.getElementById('divEstadisticas');
    let btnRegresarFlujo=document.getElementById('btnRegresarFlujo');
    let btnSalirResolucion=document.getElementById('btnSalirResolucion');
    //#endregion

    //#endregion

    //#region variables
    var CuposPorAnio = [];
    var accionAgregarEditarCuposAnio = true; //true para agregar false para editar
    var recargarTablaCuposAnio = false;
    var contadorRegistrosCuposAnio = 0;
    var contadorEspeciesExportar = 0;
    var idCuposAnio;
    var datosGuardar = [];
    var tiposMarcajeSeleccionados = [];
    var accionEditar = false; //true para editar resolucion, false para ver resolucion
    var accionVer = false; //true para ver
    var accionGuardar = false;
    var accionEditarEspecieExportar = false;
    var accionVerEspecieExportar = false;
    var idCupoEditar = 0;
    var datosEspecieExportar;
    var validacionEspecieExportar = false;
    var validacionResolucion = false;
    var idEspecieExportarEditar;
    var adjuntosNuevo = [];
    var adjuntosEliminar = [];
    var adjuntosOriginal = [];
    var adjuntoBase64;
    var nombreAdjunto;
    var tipoAdjunto;
    var nitEmpresa;
    var tiposMarcaje = [];
    var tiposPagoCuotaRepoblacion = [];
    var idEliminarResolucion;
    var totalOtorgadosControlCupos = 0;
    var encontroEntidad = false;
    var totalDisponibles = 0;
    var especies = [];
    var adjuntosResolucion = [];
    let resoluciones;
    let autoridades;
    let cuposPorEspecie;
    let inventarioEspecies;
    let resolucionesObtenidas=[];
    //#endregion

    //#region funciones
    async function TraerAutoridadEmite() {
        let url = `@Url.Action("ConsultAuthority", "NonTimberFloraCertificate")`;
        autoridades = await Get(url);
        if (autoridades.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        txtAutoridadEmiteResolucion.innerHTML = '<option value="0">Seleccione Autoridad...</option>';
        autoridades.forEach(el => {
            txtAutoridadEmiteResolucion.innerHTML +=
                `<option value="${el.code}">${el.name}</option>`
        });
    }

    function loadDatosEntidad() {
        reiniciarPestañaDatosEntidad();
        ocultarElemento(btnSiguienteRegistrarResolucion, true);
        ocultarElemento(btnRegresarFlujo, false);
        limpiarRegistrarResolucion();
        btnSiguiente.innerText = 'Siguiente';
        loadTabs(1);
    }

    function loadResolucion() {
        LimpiarTodo();
        ocultarElemento(btnRegresarFlujo, true);
        ocultarElemento(btnGuardarRegistrarResolucion, true);
        ocultarElemento(tab3Input, true);
        ocultarElemento(btnSiguiente, false);
        ocultarElemento(btnSalirControl, true);
        btnSiguiente.innerText = 'Anterior';
        loadTabs(2);
        loadTablaResolucionAsignacionCupos();
    }

    $(document).ready(async function () {
        visualizarFondoProcesando();
        divAdjunto.innerHTML = '';
        idListAdvertencia.innerHTML = '';
        $(txtTotalPoblacion).val(0);
        $(txtHembras).val(0);
        $(txtMachos).val(0);
        ocultarElemento(divSpinner, false);
        ocultarElemento(divBtnAceptarModal, true);
        ocultarElemento(divBtnSiModal, true);
        ocultarElemento(divBtnNoModal, true);
        btnAgregarRegistroCuposAnio.innerText = 'Guardar';
        btnAgregarRegistroCuposAnio.setAttribute("title", "Guardar y adicionar año de produccion y cupos en la tabla");
        configuracionControlesSoloAño();
        traerPagoCuotaRepoblacionOpciones();
        await traerTiposEspecimenes();
        TraerAutoridadEmite();
        traerTiposMarcaje();
        await llenadoDatosEntidad();
        ocultarElemento(divSpinner, true);
        ocultarElemento(divBtnAceptarModal, true);
        ocultarFondoProcesando();
    });

    //vuelve a la pestaña normal de datos entidad
    function VolverDatosEntidad() {
        reiniciarPestañaDatosEntidad();
        totalOtorgadosControlCupos = 0;
    }

    //llenado de los controles para datos de entidad
    async function llenadoDatosEntidad() {  
        nitEmpresa = document.querySelector('#nit').value;
        loadDatosEntidad();
    }

    function aceptarModal1() {
        if (!encontroEntidad) {
            let url = `@Url.Action("Index", "Home")`;
            window.location = url;
        }
    }
    //se convierten controles para que sean de tipo year
    function configuracionControlesSoloAño() {
        $(txtAnioProduccion).datepicker({
            format: "yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        });
    }

    //se traen los tipos de marcaje y se pintan en frontal de especie a comercializar
    async function traerTiposMarcaje() {
        let url = `@Url.Action("ConsultMarkingType", "RegistrarResolucion")`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        tiposMarcaje = r;
        r.forEach(el => {
            divChecksTipoMarcaje.innerHTML +=
                `<div class="form-check">
                    <input class="form-check-input check" name="tiposMarcas" type="checkbox" value="${el.code}" id="check${el.code}">
                    <label class="form-check-label" for="flexCheckDefault">
                    ${el.name}
                    </label>
                </div>`
        })
    }

    //se trae los pagos cupta repoblacion para pintarlos en select
    async function traerPagoCuotaRepoblacionOpciones() {
        let url = `@Url.Action("ConsultRepoblationPay", "RegistrarResolucion")`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        tiposPagoCuotaRepoblacion = r;
        sltPagoCuotaRepoblacion.innerHTML = `<option value="0" selected>Seleccione pago de cuota de repoblacion</option>`;
        r.forEach(el => {
            sltPagoCuotaRepoblacion.innerHTML +=
                `<option value="${el.code}">${el.name}</option>`
        });
    }

    //se trae los Tipos de Especimenes para pintarlos en select2
    async function traerTiposEspecimenes() {
        let url = `@Url.Action("ConsultEspecimensTypes", "RegistrarResolucion")`;
        especies = await Get(url);
        if (especies.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        confSelectScrollInfite("#sltEspecimen", especies);
        confSelectScrollInfite("#sltTipoEspecimenValido", especies);
    }

    //boton sigueinte o anterior
    function siguiente() {

        if ($(tab1Content).is(":visible")) {
            loadTabs(2);
            loadTablaResolucionAsignacionCupos();
            ocultarElemento(btnRegresarFlujo, true);
            ocultarElemento(btnGuardarRegistrarResolucion, true);
            btnSiguiente.innerText = 'Anterior';
            return;
        }

        if ($(tab3Content).is(":visible")) {
            if (accionVer) {
                limpiarModalConfirmaciones();
                modalConfirmacionesValidacion("¿Está seguro que desea salir? ");
                return;
            }
            loadTabs(2);
            btnSiguiente.innerText = 'Anterior';
            ocultarElemento(tab3Input, true);
            ocultarElemento(btnGuardarRegistrarResolucion, true)
            return;
        }
        reiniciarPestañaDatosEntidad();
        if (!$(btnSiguienteRegistrarResolucion).hasClass('d-none')) {
            $(btnSiguienteRegistrarResolucion).addClass('d-none')
        }
        loadTabs(1);
        ocultarElemento(btnRegresarFlujo, false);
        btnSiguiente.innerText = 'Siguiente';
        limpiarRegistrarResolucion();
    }


    //llena modal de control de cupos 
    async function controlCupos() {
        visualizarFondoProcesando();
        ocultarElemento(divBtnHistorialCuposDatosEntidad, true);
        ocultarElemento(divDatosEntidad, true);
        ocultarElemento(btnSiguiente, true);
        ocultarElemento(btnSalirControl, false);
        if ($(divModalHistorialCupos).hasClass('d-none')) {
            $(divModalHistorialCupos).removeClass('d-none');
            $(divModalHistorialCupos).addClass('d-block');
        }
        await loadTablaCupos();
        await loadTablaInventario();
        await cargarTotales();
        ocultarFondoProcesando();
    }
    //reinicia pestalla datos de la entidad
    function reiniciarPestañaDatosEntidad() {
        ocultarElemento(divBtnHistorialCuposDatosEntidad, false);
        ocultarElemento(divDatosEntidad, false);
        ocultarElemento(btnSiguiente, false);
        ocultarElemento(btnSalirControl, true);
        if ($(divModalHistorialCupos).hasClass('d-block')) {
            $(divModalHistorialCupos).removeClass('d-block');
            $(divModalHistorialCupos).addClass('d-none');
        }
    }

    function cargarTotales(){
        divEstadisticas.innerHTML='';
        let especiesAgrupadas = [];
        if(cuposPorEspecie!=null && cuposPorEspecie!=undefined && cuposPorEspecie.length>0){
            cuposPorEspecie.forEach(el => {
                const found = especiesAgrupadas.findIndex(element => element.especie === el.codigoEspecie);
                if (found === -1) {
                    especiesAgrupadas.push({
                        "especie":el.codigoEspecie,
                        "totalCuposOtorgadosEspecie":el.cuposDisponibles,
                        "totalInventarioEspecie":0
                    });
                } else {
                    especiesAgrupadas[found].totalCuposOtorgadosEspecie += el.cuposDisponibles;  
                }
            });
        }
        if(inventarioEspecies!=null && inventarioEspecies!=undefined && inventarioEspecies.length>0){
            inventarioEspecies.forEach(el => {
                const found = especiesAgrupadas.findIndex(element => parseInt(element.especie) === el.speciesCode);
                if (found != -1) {
                    especiesAgrupadas[found].totalInventarioEspecie += el.availableInventory;  
                }else{
                    especiesAgrupadas.push({
                        "especie":el.speciesCode,
                        "totalCuposOtorgadosEspecie":0,
                        "totalInventarioEspecie":el.availableInventory
                    });
                }
            });
        }
        if(especiesAgrupadas!=null && especiesAgrupadas!=undefined && especiesAgrupadas.length>0){
            especiesAgrupadas = especiesAgrupadas.filter(p=>(parseInt(p.totalCuposOtorgadosEspecie)!=0) || (parseInt(p.totalInventarioEspecie)!=0));
            if(especiesAgrupadas.length>0){
                especiesAgrupadas.forEach(el=>{
                    var especieNombre;
                    especies.forEach(ele => {
                        if (ele.id == parseInt(el.especie)) {
                            especieNombre = ele.text;
                        }
                    });
                    divEstadisticas.innerHTML+=
                                `<div class="row div-totales col-4">
                                    <label class="col-12 titulo-especie">${especieNombre}</label>
                                    <p><span >${el.totalCuposOtorgadosEspecie}</span> cupos disponibles</p>
                                    <p><span>${el.totalInventarioEspecie}</span> inventario disponibles</p>
                                </div>`;
                });
            }
        }
    }

    //cargar la tabal de cupos en modal control de cupos 
    async function loadTablaCupos() {
        let url = `@Url.Action("ConsultQuotas", "RegistrarResolucion")` + `?nitBussines=${nitEmpresa}`;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        cuposPorEspecie=r;
        var columns = [
            {
                "data": "codigoCupo",
                className: "d-none"
            },
            {
                "data": "numeroResolucion",
                className: "td-1"
            },

            {
                "data": "fechaResolucion",
                render: function (data) {
                    return moment(data).format('yyyy-MM-DD');
                }
            },
            {
                "data": "fechaRegistroResolucion",
                render: function (data) {
                    return moment(data).format('yyyy-MM-DD');
                }
            },
            {
                "data": "autoridadEmiteResolucion",
                render : function(data){
                    let autoridad;
                    autoridades.forEach(el=>{
                        if(parseInt(el.code) == parseInt(data)){
                            autoridad = el.name;
                        }
                    });
                    return autoridad
                }
            },
            {
                "data": "codigoEspecie",
                render: function (data) {
                    var especieNombre;
                    especies.forEach(el => {
                        if (el.id == data) {
                            especieNombre = el.text;
                        }
                    });
                    return especieNombre;
                }
            },
            {
                "data": "anioProduccion"
            },
            {
                "data": "cuposAprovechamientoComercializacion"
            },
            {
                "data": "cuotaRepoblacion"
            },
            {
                "data": "cuposTotal"
            },
            {
                "data": "cuposDisponibles"
            }
        ];

        DataTableGenerico('#TableCupos', columns, r, 10);
    }

    //cargar la tabal de inventario en modal control de cupos
    async function loadTablaInventario() {
        let url = `@Url.Action("GetInventory","SaleDocument")` + `?documentNumber=${nitEmpresa}` ;
        let r = await Get(url);
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        inventarioEspecies=r;
        $(`#TableInventario`).DataTable({
            destroy: true,
            scrollX: true,
            lengthChange: true,
            lengthMenu: [5, 10, 20, 50, 100],
            paging: true,
            info: true,
            dom: "<'row'<'col-md-12'f><'col-md-12 text-end'<'d-flex align-items-center mt-1'<'col-md-10'l><'col-md-2'i>>>>" + "<'row'<'col-md-12'rt><'col-md-12 text-center'p>>",
            language: {
                lengthMenu: "Resultados pág. _MENU_",
                info: "_START_ al _TOTAL_ Resultados",
                search: '',
                searchPlaceholder: "Buscar",
                zeroRecords: "No se encontraron resultados",
                infoEmpty: "0 al 0 Resultados",
                paginate: {
                    previous: 'Anterior',
                    next: 'Siguiente'
                }
            },
            data: r,
            columns: [
                {
                    "data": "code",
                    className: "d-none"
                },
                {
                    "data": "numberSaleCarte"
                },
                {
                    "data": "reasonSocial"
                },
                {
                    "data": "saleDate",
                    render: function (data) {
                        if (data != null) {
                        return moment(data).format("DD-MM-yyyy");
                        }
                        return data;
                    }, 
                },
                {
                    "data": "availabilityInventory"
                },
                {
                    "data": "speciesCode",
                    render: function (data) {
                        var especieNombre;
                        especies.forEach(el => {
                            if (el.id == data) {
                                especieNombre = el.text;
                            }
                        });
                        return especieNombre;
                    }
                },
                {
                    "data": "year"
                },
                {
                    "data": "availableInventory"
                }
            ],
            columnDefs: [{
                targets: 7
            }]
        });
        agregarClasesDatatable(`#TableInventario`);
    }

    // carga la tabla de resolucion de asignacion de cupos
    async function loadTablaResolucionAsignacionCupos(ResolutionNumbre = null) {
        let url;
        let r;
        if (ResolutionNumbre != null) {
            url = `@Url.Action("SearchQuotas", "RegistrarResolucion")` + `?ResolutionNumbre=${ResolutionNumbre}`;
            r = await Get(url);
        } else {
            url = `@Url.Action("ConsultQuotas", "RegistrarResolucion")` + `?nitBussines=${nitEmpresa}`;
            r = await Get(url);
            resolucionesObtenidas=r;
        }
        if (r.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        var columns = [
            {
                "data": "codigoCupo",
                className: "d-none"
            },
            {
                "data": "numeroResolucion",
                className: "td-1"
            },

            {
                "data": "fechaResolucion",
                render: function (data) {
                    return moment(data).format('yyyy-MM-DD');
                }
            },
            {
                 "data": "fechaRegistroResolucion",
                    render: function (data) {
                        if (data != null) {
                            return moment(data).format('yyyy-MM-DD');
                        }
                        return data;
                    }
            },
            {
                "data": "autoridadEmiteResolucion",
                render : function(data){
                    let autoridad;
                    autoridades.forEach(el=>{
                        if(parseInt(el.code) == parseInt(data)){
                            autoridad = el.name;
                        }
                    });
                    return autoridad
                }
            },
            {
                "data": "codigoEspecie",
                render: function (data) {
                    var especieNombre;
                    especies.forEach(el => {
                        if (el.id == data) {
                            especieNombre = el.text;
                        }
                    });
                    return especieNombre;
                }
            },
            {
                "data": "anioProduccion"
            },
            {
                "data": "cuposAprovechamientoComercializacion"
            },
            {
                "data": "cuotaRepoblacion"
            },
            {
                "data": "cuposTotal"
            },
            {
                "data": "cuposDisponibles"
            },
            {
                render: function () {
                    return '<a type="button" class="btnDetalle" data-bs-toggle="tooltip" data-bs-placement="top" title="Detalles">VER</a> / <a type="button" class="btnEditarResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / <a type="button" class="btnEliminarResolucion" data-bs-toggle="tooltip" data-bs-placement="top" title="Eliminar">ELIMINAR</a>'
                }
            }
        ];

        DataTableGenericoSinBuscador('#TableResolucionesRegistradas', columns, r, 11);

        if (ResolutionNumbre != null && r.length == 0) {
            limpiarModalConfirmaciones();
            lblConfirmacion.innerText = 'Número de resolución no existe';
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonAceptarConfirmacion, false);
            $("#modalConfimaciones").modal("show");
        }
    }

    async function validarNumeroMayorInterno() {
        let url = `@Url.Action("ConsultQuotas", "RegistrarResolucion")` + `?nitBussines=${nitEmpresa}`;
        resoluciones = await Get(url);
        if (resoluciones.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        let internoFinalMayor=0;
        if (resoluciones != null && resoluciones != undefined && resoluciones.length != 0) {
            resoluciones.forEach(el => {
                if (el.numeroInternoFinal > internoFinalMayor) {
                    internoFinalMayor = el.numeroInternoFinal;
                }
                if (el.numeroInternoFinalCuotaRepoblacion != null && el.numeroInternoFinalCuotaRepoblacion != ''
                    && el.numeroInternoFinalCuotaRepoblacion > internoFinalMayor) {
                    internoFinalMayor = el.numeroInternoFinalCuotaRepoblacion;
                }
            });
        }
        if (CuposPorAnio != null && CuposPorAnio != undefined && CuposPorAnio.length != 0) {
            CuposPorAnio.forEach(el => {
                if (el.numeroInternoFinal > internoFinalMayor) {
                    internoFinalMayor = el.numeroInternoFinal;
                }
                if (el.numeroInternoFinalCuotaRepoblacion != null && el.numeroInternoFinalCuotaRepoblacion != ''
                    && el.numeroInternoFinalCuotaRepoblacion > internoFinalMayor) {
                    internoFinalMayor = el.numeroInternoFinalCuotaRepoblacion;
                }
            });
        }
        return parseInt(internoFinalMayor) + 1;
    }

    function salirResolucion(){
        idListAdvertencia.innerHTML = '';
        ocultarElemento(divregistrarResolucion, true);
        accionGuardar = false;
        accionEditar = false;
        accionVer = false;
        CuposPorAnio = [];
        recargarTablaCuposAnio = true;
        agregarRegistroCuposAnio();
        LimpiarTodo(true);
        loadTabs(2)
    }

    //muestra formulario para registrar resolucion
    async function RegistrarResolucion(validar = false) {
        idListAdvertencia.innerHTML = '';
        ocultarElemento(divregistrarResolucion, false);
        if (!validar) {
            TituloRegistroEspecieComercializar.innerText = 'Registrar Especie a Comercializar';
            ocultarElemento(divSoloRegistrarEspecies, false);
            ocultarElemento(divTableCuposAnio, true);
            tituloAccionResolucion.innerText = 'Registrar nueva resolución';
            tituloAccionEspecieExportar.innerText = 'Registrar especie a comercializar';
            accionGuardar = true;
            accionEditar = false;
            accionVer = false;
            LimpiarTodo(true);
            ocultarElemento(btnSalirResolucion, false);
            let numero = await validarNumeroMayorInterno();
            $(txtNumeroInternoInicial).val(numero);
            btnAgregarRegistroCuposAnio.innerText = 'Guardar';
            btnAgregarRegistroCuposAnio.setAttribute("alt", "Guardar y adicionar año de produccion y cupos en la tabla");
            btnAgregarRegistroCuposAnio.setAttribute("title", "Guardar y adicionar año de produccion y cupos en la tabla");
            accionAgregarEditarCuposAnio = true;
            recargarTablaCuposAnio = false;
            $(sltTipoEspecimenValido).val('').trigger('change');
            $(txtAnioProduccion).val('');
            $(txtCuposRegistrar).val('');
            $(txtCuotaRepoblacion).val('');
            $(txtTotalCuposOtorgados).val('');
            $(txtNumeroInternoFinal).val('');
            reiniciarSoloLeerControles();
            const fecha = new Date();
            $(txtFechaRegistroResolucion).val(moment(fecha).format('yyyy-MM-DD'));
        }
        ocultarElemento(btnSiguienteRegistrarResolucion, true);
        readOnly(txtTotalCuposOtorgados, true);
        readOnly(txtTotalPoblacion, true);
    }

    function validarCuposPorAnio() {

        var res = resolucionesObtenidas.filter(p=>p.numeroResolucion==$(txtnumeroResolucion).val());

        idListAdvertencia.innerHTML = '';
        if (CuposPorAnio != null && CuposPorAnio != undefined && CuposPorAnio.length > 0) {
            CuposPorAnio.forEach(el => {
                if (el.codigoEspecie == $(sltTipoEspecimenValido).val() && el.anio == $(txtAnioProduccion).val()) {
                    idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> Ya se realizo un registro para la misma especie en el año ${el.anio}</li>`;
                }
            });
        }
        if (res != null && res != undefined && res.length > 0 && $(txtnumeroResolucion).val()!='') {
            res.forEach(el => {
                if (el.codigoEspecie == $(sltTipoEspecimenValido).val() && el.anioProduccion == $(txtAnioProduccion).val()) {
                    idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> Ya se realizo un registro para la misma especie en el año ${el.anioProduccion}</li>`;
                }
            });
        }
                
        if($(txtFechaResolucion).val()!=''){
            var fecha = new Date($(txtFechaResolucion).val());
            fecha.setDate(fecha.getDate()+ 1);
            var añoEmisionResolucion = fecha.getFullYear();
            if(parseInt($(txtAnioProduccion).val())>parseInt(añoEmisionResolucion)){
                idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> El año de producion no puede ser mayor al año de emision de resolución</p></li>`;
            }
        }

        var validarCuposRepetidosParaEspeciePorAnio=true;
        if (idListAdvertencia.innerHTML != '') {
            validarCuposRepetidosParaEspeciePorAnio = false;
        }
        var validarsltTipoEspecimenValido = validar(sltTipoEspecimenValido, validacionTipoEspecimenValido, false, $('#divSltTipoEspecimenValido .select2-selection'));
        var validartxtAnioProduccion = validar(txtAnioProduccion, validaciontxtAnioProduccion);
        var validartxtCuposRegistrar = validar(txtCuposRegistrar, validaciontxtCuposRegistrar);
        var validartxtCuotaRepoblacion = validar(txtCuotaRepoblacion, validaciontxtCuotaRepoblacion);
        var validartxtNumeroInternoInicial = validar(txtNumeroInternoInicial, validaciontxtNumeroInternoInicial);
        var validartxtNumeroInternoFinal = validar(txtNumeroInternoFinal, validaciontxtNumeroInternoFinal);

        if (validartxtAnioProduccion && validartxtCuposRegistrar && validartxtCuotaRepoblacion && validartxtNumeroInternoInicial
            && validartxtNumeroInternoFinal && validarsltTipoEspecimenValido && validarCuposRepetidosParaEspeciePorAnio) {
            return true;
        }
        var camposObligatorios = [];
        if (!validarsltTipoEspecimenValido) {
            camposObligatorios.push('Nombre Especie');
        }
        if (!validartxtAnioProduccion) {
            camposObligatorios.push('Año de Producción');
        }
        if (!validartxtCuposRegistrar) {
            camposObligatorios.push('Cupos de Aprovechamiento y Comercialización');
        }
        if (!validartxtCuotaRepoblacion) {
            camposObligatorios.push('Cuota de Repoblación');
        }
        if (!validartxtNumeroInternoInicial) {
            camposObligatorios.push('N° interno inicial');
        }
        if (!validartxtNumeroInternoFinal) {
            camposObligatorios.push('N° interno final');
        }

        if(camposObligatorios.length>0){
            alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);
        }
        return false;
    }
    //se agregan datos a taba de cupos por año en registrar nueva resolucion
    async function agregarRegistroCuposAnio() {
        if (accionAgregarEditarCuposAnio) {
            if (!recargarTablaCuposAnio) {
                if (validarCuposPorAnio()) {
                    ocultarElemento(validacionCuposAnioProduccion, true);
                    agregarDatoCuposAsigna();
                } else {
                    return;
                }
            } else {
                recargarTablaCuposAnio = false;
            }
            var table = $(`#TableCuposPorAnio`).DataTable({
                destroy: true,
                scrollX: true,
                lengthChange: true,
                lengthMenu: [5, 10, 20],
                paging: true,
                info: true,
                filter: false,
                dom: "<'row'<'col-md-12 text-end'<'d-flex align-items-center mt-1'<'col-md-10'l><'col-md-2'i>>>>" + "<'row'<'col-md-12'rt><'col-md-12 text-center'p>>",
                language: {
                    lengthMenu: "Resultados pág. _MENU_",
                    info: "_START_ al _TOTAL_ Resultados",
                    search: '',
                    searchPlaceholder: "Buscar",
                    zeroRecords: "No se encontraron resultados",
                    infoEmpty: "0 al 0 Resultados",
                    paginate: {
                        previous: 'Anterior',
                        next: 'Siguiente'
                    }
                },
                data: CuposPorAnio,
                columns: [
                    {
                        "data": "id",
                        className: "d-none"
                    },
                    {
                        "data": "codigoEspecie",
                        render: function (data) {
                            var especieNombre;
                            especies.forEach(el => {
                                if (el.id == data) {
                                    especieNombre = el.text;
                                }
                            });
                            return especieNombre;
                        }
                    },
                    {
                        "data": "anio"
                    },
                    {
                        "data": "cupos"
                    },
                    {
                        "data": "cuotaRepoblacion"
                    },
                    {
                        "data": "totalCupos"
                    },
                    {
                        "data": "numeroInternoInicial"
                    },
                    {
                        "data": "numeroInternoFinal"
                    },
                    {
                        "data": "numeroInternoInicialCuotaRepoblacion",
                        render: function (data) {
                            if (data == 0) {
                                return '';
                            }
                            return data;
                        }
                    },
                    {
                        "data": "numeroInternoFinalCuotaRepoblacion",
                        render: function (data) {
                            if (data == 0) {
                                return '';
                            }
                            return data;
                        }
                    },
                    {
                        "data": "seRegistroEspecieComercializar",
                        render: function (data) {
                            if (accionVer) {
                                return '<a type="button" class="btnVerEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Ver especie a comercializar">VER ESPECIE COMERCIALIZAR</a>';
                            }
                            if (accionEditar) {
                                return '<a type="button" class="btnEditarCupoAnio" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / <a type="button" class="btnVerEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Ver especie a comercializar">VER ESPECIE COMERCIALIZAR</a> / <a type="button" class="btnEditarEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar especie a comercializar">EDITAR ESPECIE COMERCIALIZAR</a>';
                            }
                            if (data) {
                                return '<a type="button" class="btnEditarCupoAnio" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / <a type="button" class="btnVerEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Ver especie a comercializar">VER ESPECIE COMERCIALIZAR</a> / <a type="button" class="btnEditarEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar especie a comercializar">EDITAR ESPECIE COMERCIALIZAR</a> / <a type="button" class="btnEliminarCupoAnio" data-bs-toggle="tooltip" data-bs-placement="top" title="Eliminar">ELIMINAR</a>';
                            } else {
                                return '<a type="button" class="btnEditarCupoAnio" data-bs-toggle="tooltip" data-bs-placement="top" title="Editar">EDITAR</a> / <a type="button" class="btnEspecieComercializar" data-bs-toggle="tooltip" data-bs-placement="top" title="Especie a comercializar">ESPECIE COMERCIALIZAR</a> / <a type="button" class="btnEliminarCupoAnio" data-bs-toggle="tooltip" data-bs-placement="top" title="Eliminar">ELIMINAR</a>';
                            }
                        }
                    }
                ],
                columnDefs: [{
                    targets: 10
                }]
            });

            agregarClasesDatatable(`#TableCuposPorAnio`);

            $(sltTipoEspecimenValido).val('').trigger('change');
            $(txtAnioProduccion).val('');
            $(txtCuposRegistrar).val('');
            $(txtCuotaRepoblacion).val('');
            $(txtTotalCuposOtorgados).val('');
            $(txtNumeroInternoInicial).val('');
            $(txtNumeroInternoFinal).val('');
            let numero = await validarNumeroMayorInterno();
            $(txtNumeroInternoInicial).val(numero);
            if (table.data().count() > 0) {
                if ($(divTableCuposAnio).hasClass('d-none')) {
                    $(divTableCuposAnio).removeClass('d-none')
                }
            }
            else {
                if (!$(divTableCuposAnio).hasClass('d-none')) {
                    $(divTableCuposAnio).addClass('d-none')
                }
            }
            return;
        }
        btnAgregarRegistroCuposAnio.innerText = 'Guardar';
        btnAgregarRegistroCuposAnio.setAttribute("alt", "Guardar y adicionar año de produccion y cupos en la tabla");
        btnAgregarRegistroCuposAnio.setAttribute("title", "Guardar y adicionar año de produccion y cupos en la tabla");
        accionAgregarEditarCuposAnio = true;
        if (accionEditar) {
            ocultarElemento(divSoloRegistrarEspecies, true);
            TituloRegistroEspecieComercializar.innerText = 'Registrar Especie a Comercializar';
        }
        readOnly(txtCuposRegistrar, false);
        CuposPorAnio.forEach(el => {
            if (el.id == idCuposAnio) {
                el.codigoEspecie = $(sltTipoEspecimenValido).val();
                el.anio = $(txtAnioProduccion).val();
                el.añoProduccion = $(txtAnioProduccion).val();
                el.cupos = $(txtCuposRegistrar).val();
                el.cupoAprovechamientoOtorgados = $(txtCuposRegistrar).val();
                el.cuotaRepoblacion = $(txtCuotaRepoblacion).val();
                el.numeroInternoInicial = $(txtNumeroInternoInicial).val();
                el.numeroInternoFinal = $(txtNumeroInternoFinal).val();
                if (el.sePagoCuotaRepoblacion) {
                    el.totalCupos = parseInt($(txtCuposRegistrar).val()) + parseInt($(txtCuotaRepoblacion).val());
                    el.cupoAprovechamientoOtorgadosPagados = el.totalCupos;
                } else {
                    el.totalCupos = $(txtCuposRegistrar).val();
                    el.cupoAprovechamientoOtorgadosPagados = parseInt($(txtCuposRegistrar).val()) + parseInt($(txtCuotaRepoblacion).val());
                }
            }
        });
        agregarRegistroCuposAnio();
    }

    $('#TableCuposPorAnio tbody').on('click', '.btnEditarCupoAnio', function () {
        if (accionEditar) {
            TituloRegistroEspecieComercializar.innerText = 'Editar Especie a Comercializar';
            ocultarElemento(divSoloRegistrarEspecies, false);
        }
        readOnly(txtCuposRegistrar, true);
        accionAgregarEditarCuposAnio = false;
        recargarTablaCuposAnio = true;
        btnAgregarRegistroCuposAnio.innerHTML = 'Editar';
        btnAgregarRegistroCuposAnio.setAttribute("alt", "Editar");
        btnAgregarRegistroCuposAnio.setAttribute("title", "Editar");
        idCuposAnio = parseInt($(this).parents("tr").find("td")[0].innerText);
        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        $(sltTipoEspecimenValido).val(especieComercializar.codigoEspecie).trigger('change');
        $(txtAnioProduccion).val(especieComercializar.anio);
        $(txtCuposRegistrar).val(especieComercializar.cupos);
        $(txtCuotaRepoblacion).val(especieComercializar.cuotaRepoblacion);
        $(txtTotalCuposOtorgados).val(especieComercializar.totalCupos);
        $(txtNumeroInternoInicial).val(especieComercializar.numeroInternoInicial);
        $(txtNumeroInternoFinal).val(especieComercializar.numeroInternoFinal);
    });

    $('#TableCuposPorAnio tbody').on('click', '.btnVerEspecieComercializar', function () {
        idListAdvertencia.innerHTML = '';
        tituloAccionEspecieExportar.innerText = "Ver especie a comercializar";
        idCuposAnio = parseInt($(this).parents("tr").find("td")[0].innerText);
        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        limpiarEspecieExportar();
        btnSiguienteRegistrarResolucion.innerHTML = "Cancelar";
        ocultarElemento(btnGuardarRegistrarResolucion, true);
        ocultarElemento(btnSiguiente, true);
        ocultarElemento(tab3Input, false);
        accionEditarEspecieExportar = false;
        accionVerEspecieExportar = true;
        llenarEspeciExportarControles(especieComercializar);
        soloLeerControles(true);
        loadTabs(3);
    });

    $('#TableCuposPorAnio tbody').on('click', '.btnEspecieComercializar', function () {
        idListAdvertencia.innerHTML = '';
        tituloAccionEspecieExportar.innerText = "Registrar especie a comercializar";
        idCuposAnio = parseInt($(this).parents("tr").find("td")[0].innerText);
        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        limpiarEspecieExportar();
        btnSiguienteRegistrarResolucion.innerHTML = "Cancelar";
        ocultarElemento(divBtnAgregar, false);
        ocultarElemento(btnGuardarRegistrarResolucion, true);
        ocultarElemento(btnLimpiarEspecie, false);
        ocultarElemento(btnSiguiente, true);
        ocultarElemento(tab3Input, false);
        $(sltEspecimen).val(especieComercializar.codigoEspecie).trigger('change');
        $(txtCuposAprovechamientoOtorgados).val(especieComercializar.cupos);
        $(txtIndividuasRepoblacion).val(especieComercializar.cuotaRepoblacion);
        $(txtCuposAprovOtorgPagada).val(especieComercializar.totalCupos);
        $(txtAnioProduccionEspecimen).val(especieComercializar.anio);
        accionEditarEspecieExportar = false;
        accionVerEspecieExportar = false;
        loadTabs(3);
    });

    $('#TableCuposPorAnio tbody').on('click', '.btnEditarEspecieComercializar', function () {
        idListAdvertencia.innerHTML = '';
        tituloAccionEspecieExportar.innerText = "Editar especie a comercializar";
        idCuposAnio = parseInt($(this).parents("tr").find("td")[0].innerText);
        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        limpiarEspecieExportar();
        btnSiguienteRegistrarResolucion.innerHTML = "Cancelar";
        ocultarElemento(btnGuardarRegistrarResolucion, true);
        ocultarElemento(btnSiguiente, true);
        ocultarElemento(tab3Input, false);
        accionEditarEspecieExportar = true;
        accionVerEspecieExportar = false;
        llenarEspeciExportarControles(especieComercializar);
        loadTabs(3);
    });

    //agrega dato a objeto CuposPorAnio
    function agregarDatoCuposAsigna() {
        contadorRegistrosCuposAnio++;
        var data = {
            "id": contadorRegistrosCuposAnio,
            "codigoEspecie": parseInt($(sltTipoEspecimenValido).val()),
            "anio": parseInt($(txtAnioProduccion).val()),
            "cupos": parseInt($(txtCuposRegistrar).val()),
            "cuotaRepoblacion": $(txtCuotaRepoblacion).val(),
            "totalCupos": parseInt($(txtCuposRegistrar).val()),
            "numeroInternoInicial": parseInt($(txtNumeroInternoInicial).val()),
            "numeroInternoFinal": parseInt($(txtNumeroInternoFinal).val()),
            "numeroInternoInicialCuotaRepoblacion": "",
            "numeroInternoFinalCuotaRepoblacion": "",
            "cuposDisponibles":"",
            "tipoEspecimen": "",
            "añoProduccion": parseInt($(txtAnioProduccion).val()),
            "marcaLote": "",
            "codigoParametricaTipoMarcaje": "",
            "condicionesMarcaje": "",
            "poblacionParentalMacho": "",
            "poblacionParentalHembra": "",
            "poblacionParentalTotal": "",
            "poblacionSalioDeIncubadora": "",
            "poblacionDisponibleParaCupos": "",
            "individuosDestinadosARepoblacion": "",
            "cupoAprovechamientoOtorgados": $(txtCuposRegistrar).val(),
            "tasaReposicion": "",
            "cuotaRepoblacionParaAprovechamiento": "",
            "codigoParametricaPagoCuotaDerepoblacion": "",
            "cupoAprovechamientoOtorgadosPagados": parseInt($(txtCuposRegistrar).val()),
            "fechaRadicado": "",
            "observaciones": "",
            "documentosSoporte": [],
            "sePagoCuotaRepoblacion": false,
            "seRegistroEspecieComercializar": false
        }
        CuposPorAnio.push(data);
    }

    //limpia los controles de agregar resolucion
    function limpiarRegistrarResolucion() {
        CuposPorAnio = [];
        recargarTablaCuposAnio = true;
        agregarRegistroCuposAnio();
        LimpiarTodo();
    }

    //limpiar Todo
    function LimpiarTodo(validar = false) {
        if (!validar) {
            ocultarElemento(divregistrarResolucion, true);
            ocultarElemento(btnGuardarRegistrarResolucion, true);
            ocultarElemento(divBtnAceptarModal, true);
            ocultarElemento(divBtnSiModal, true);
            ocultarElemento(divBtnNoModal, true);
            btnSiguiente.innerText = 'Anterior';
            ocultarElemento(tab3Input, true);
            ocultarElemento(divModalHistorialCupos, true);
            btnSiguienteRegistrarResolucion.innerText = "Siguiente";
            ocultarElemento(btnSiguienteRegistrarResolucion, true);
            btnSiguiente.innerText = 'Siguiente';
            loadTabs(1);
            idEliminarResolucion = 0;
        }
        ocultarElemento(btnSalirResolucion, true);
        idListAdvertencia.innerHTML = '';
        $(txtAutoridadEmiteResolucion).val('');
        $(txtCodigoZoocriadero).val('');
        $(txtnumeroResolucion).val('');
        $(txtFechaResolucion).val('');
        $(txtFechaRegistroResolucion).val('');
        $(txtTotalCuposOtorgados).val('');
        $(txtAnioProduccion).val('');
        $(txtCuposRegistrar).val('');
        $(txtCuotaRepoblacion).val('');
        $(txtNumeroInternoInicial).val('');
        $(txtNumeroInternoFinal).val('');
        $(txtObservaciones).val('');

        limpiarEspecieExportar();
        contadorRegistrosCuposAnio = 0;

        CuposPorAnio = [];
        datosGuardar = [];
        ocultarElemento(divBtnAgregarRegistroCuposAnio, false);
        ocultarElemento(divBtnAgregar, false);
        datosEspecieExportar = [];
        ocultarElemento(divVerEspeciesExportar, true);
        accionEditar = false;
        accionVer = false;
        reinicioCancelarElementos();
        accionVerEspecieExportar = false;
        accionEditarEspecieExportar = false;
        btnAgregar.innerText = 'Guardar';
        idEspecieExportarEditar = 0;
        adjuntosNuevo = [];
        adjuntosOriginal = [];
        adjuntosEliminar = [];
        idCupoEditar = 0;
    }

    //se limpia solo formulario de especie a comercializar
    function limpiarEspecieExportar() {
        $(txtNombreEspecie).val('');
        $(txtAnioProduccionEspecimen).val('');
        $(txtMarcaLote).val('');
        $(txtCondicionesMarcaje).val('');
        $(txtMachos).val('');
        $(txtHembras).val('');
        $(txtTotalPoblacion).val('');
        $(txtSalioIncubadora).val('');
        $(txtPoblacionDispCupos).val('');
        $(txtIndividuasRepoblacion).val('');
        $(txtNumeroMortalidad).val('');
        $(txtCuposAprovechamientoOtorgados).val('');
        $(txtTasaReposicion).val('');
        limpiarDatosCuotaRepoblacion();
        $(formFileSoporte).val('');
        $(txtObservacionesEspecieExportar).val('');
        $(sltEspecimen).val('').trigger('change');

        if ($(chkSiEsAprovechamiento).is(':checked')) {
            $(chkSiEsAprovechamiento).prop('checked', false);
        }
        if ($(chkNoEsAprovechamiento).is(':checked')) {
            $(chkNoEsAprovechamiento).prop('checked', false);
        }
        $(".check").prop("checked", false);
        adjuntosResolucion = [];
        divAdjunto.innerHTML = '';
        ocultarElemento(btnLimpiarEspecie, true);
    }

    //muestra pestaña especia a exportar
    function siguienteRegistrarResolucion() {
        if ($(tab3Content).is(":visible")) {
            limpiarModal1();
            mensajeEncontro.innerText = '¿Esta seguro que desea cancelar?';
            ocultarElemento(divMensajeModal1, false);
            ocultarElemento(divBtnSiModal, false);
            ocultarElemento(divBtnNoModal, false);
            $('#modal1').modal('show');
            return;
        }
    }

    //se cancela todo
    async function SiModal() {
        if (accionVer || accionEditar) {
            ocultarElemento(divregistrarResolucion, true);
            ocultarElemento(btnSiguienteRegistrarResolucion, true);
            LimpiarTodo(true);
            loadResolucion();
            accionVer = false;
            return;
        }
        LimpiarTodo()
    }

    async function SiGuardarEspecieComercializar() {
        ocultarElemento(btnSiguiente, false);
        ocultarElemento(btnGuardarRegistrarResolucion, false);

        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        tituloAccionEspecieExportar.innerText = 'Registrar especie a comercializar';

        especieComercializar.tipoEspecimen = $(txtNombreEspecie).val();
        especieComercializar.marcaLote = $(txtMarcaLote).val();
        especieComercializar.codigoParametricaTipoMarcaje = tiposMarcajeSeleccionados.join('|');
        especieComercializar.condicionesMarcaje = $(txtCondicionesMarcaje).val();
        especieComercializar.poblacionParentalMacho = $(txtMachos).val();
        especieComercializar.poblacionParentalHembra = $(txtHembras).val();
        especieComercializar.poblacionParentalTotal = $(txtTotalPoblacion).val();
        especieComercializar.poblacionSalioDeIncubadora = $(txtSalioIncubadora).val();
        especieComercializar.poblacionDisponibleParaCupos = $(txtPoblacionDispCupos).val();
        especieComercializar.individuosDestinadosARepoblacion = $(txtIndividuasRepoblacion).val();
        especieComercializar.numeroMortalidad = $(txtNumeroMortalidad).val();
        especieComercializar.tasaReposicion = $(txtTasaReposicion).val();
        especieComercializar.cuotaRepoblacionParaAprovechamiento = $(chkSiEsAprovechamiento).is(':checked') ? true : false;
        especieComercializar.codigoParametricaPagoCuotaDerepoblacion = sltPagoCuotaRepoblacion.value;
        especieComercializar.fechaRadicado = $(txtFechaRadicado).val() == '' ? null : $(txtFechaRadicado).val();
        especieComercializar.numeroInternoInicialCuotaRepoblacion = $(txtnumeroInternoInicialCuotaRepoblacion).val();
        especieComercializar.numeroInternoFinalCuotaRepoblacion = $(txtnumeroInternoFinalCuotaRepoblacion).val();

        especieComercializar.observaciones = $(txtObservacionesEspecieExportar).val();
        especieComercializar.seRegistroEspecieComercializar = true;

        if (especieComercializar.sePagoCuotaRepoblacion && $(chkSiEsAprovechamiento).is(':checked')) {

            especieComercializar.cupoAprovechamientoOtorgadosPagados = parseInt(especieComercializar.cupos) + parseInt(especieComercializar.cuotaRepoblacion);
            if($(txtNumeroMortalidad).val()!=''){
                especieComercializar.cuposDisponibles = parseInt(especieComercializar.cupos) + parseInt(especieComercializar.cuotaRepoblacion) - parseInt($(txtNumeroMortalidad).val());
            }else{
                especieComercializar.cuposDisponibles = parseInt(especieComercializar.cupos) + parseInt(especieComercializar.cuotaRepoblacion);
            }
            especieComercializar.totalCupos = parseInt(especieComercializar.cupos) + parseInt(especieComercializar.cuotaRepoblacion);
            
        } else {

            especieComercializar.cupoAprovechamientoOtorgadosPagados = especieComercializar.cupos;
            if($(txtNumeroMortalidad).val()!=''){
                especieComercializar.cuposDisponibles = parseInt(especieComercializar.cupos) - parseInt($(txtNumeroMortalidad).val());
            }else{
                especieComercializar.cuposDisponibles = especieComercializar.cupos;
            }
            especieComercializar.totalCupos = especieComercializar.cupos;
        }
        if (accionEditarEspecieExportar && accionEditar) {
            especieComercializar.documentosSoporteNuevos = adjuntosNuevo;
            especieComercializar.documentosSoporteEliminar = adjuntosEliminar;
        }

        especieComercializar.documentosSoporte = adjuntosResolucion;
        recargarTablaCuposAnio = true;
        agregarRegistroCuposAnio();
        limpiarEspecieExportar();
        accionEditarEspecieExportar = false;
        btnAgregar.innerText = 'Guardar';
        let numero = await validarNumeroMayorInterno();
        $(txtNumeroInternoInicial).val(numero);
        loadTabs(2);
        $('#modal1').modal('hide');
    }

    // se guardan lo que se registro en el formulario especie a comercializar 
    async function agregarNuevoRegistro() {
        idListAdvertencia.innerHTML = '';
        tiposMarcajeSeleccionados = [];
        let checkboxes = document.querySelectorAll('input[name="tiposMarcas"]:checked');

        checkboxes.forEach((el) => {
            tiposMarcajeSeleccionados.push(el.value);
        });
        if (validarCampos(true)) {
            limpiarModal1();
            if ($(btnNoModal).hasClass('btn btn-primary')) {
                $(btnNoModal).removeClass('btn btn-primary');
                $(btnNoModal).addClass('btn btn-secondary');
            }
            mensajeEncontro.innerText = '¿Esta seguro que desea Guardar?';
            ocultarElemento(divMensajeModal1, false);
            ocultarElemento(divSiGuardarEspecieComercializar, false);
            ocultarElemento(divBtnNoModal, false);
            $('#modal1').modal('show');
        }

    }

    function limpiarModal1() {
        if ($(btnNoModal).hasClass('btn btn-secondary')) {
            $(btnNoModal).removeClass('btn btn-secondary');
            $(btnNoModal).addClass('btn btn-primary');
        }
        ocultarElemento(divMensajeModal1, true);
        ocultarElemento(divBtnAceptarModal, true);
        ocultarElemento(divBtnSiModal, true);
        ocultarElemento(divSiGuardarEspecieComercializar, true);
        ocultarElemento(divBtnNoModal, true);
    }

    //se realiza validacion de que los campos esten llenos
    function validarCampos(validacion = false) {
        var res = resolucionesObtenidas.filter(p=>p.numeroResolucion==$(txtnumeroResolucion).val());
        var camposObligatorios = [];
        if (validacion) {
            var validartxtAnioProduccionEspecimen = validar(txtAnioProduccionEspecimen, validacionAnioProduccionEspecimen);
            var validartxtTotalPoblacion = validar(txtTotalPoblacion, validacionTotalPoblacion);
            var validartxtPoblacionDispCupos = validar(txtPoblacionDispCupos, validacionPoblacionDispCupos);
            var validartxtIndividuasRepoblacion = validar(txtIndividuasRepoblacion, validacionIndividuasRepoblacion);
            var validartxtCuposAprovechamientoOtorgados = validar(txtCuposAprovechamientoOtorgados, validacionCuposAprovechamientoOtorgados);
            var validacionchksTipoMarcaje = validar(null, validacionTipoMarcaje);
            var validacionDocSoporte;


            if (divAdjunto.innerHTML == '') {
                ocultarElemento(spanAdjuntos, false);
                validacionDocSoporte = false;
            } else {
                validacionDocSoporte = true;
            }

            if (!validacionDocSoporte) {
                spanAdjuntos.innerText = 'Campo Obligatorio';
            }

            var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
            var validartxtNumeroMortalidad=true;
            if($(txtNumeroMortalidad).val()!=''){
                if(parseInt($(txtNumeroMortalidad).val())>parseInt(especieComercializar.cupos)){
                    ocultarElemento(validaciontxtNumeroMortalidad, false);
                    if (!$(txtNumeroMortalidad).hasClass('required-validate')) {
                        $(txtNumeroMortalidad).addClass('required-validate');
                    }
                    validartxtNumeroMortalidad=false;
                }
            }
            if (especieComercializar.sePagoCuotaRepoblacion) {
                var validacionsltPagoCuotaRepoblacion = validar(sltPagoCuotaRepoblacion, validarsltPagoCuotaRepoblacion);
                var validaciontxtFechaRadicado = validar(txtFechaRadicado, validartxtFechaRadicado);
                var validaciontxtnumeroInternoInicialCuotaRepoblacion = validar(txtnumeroInternoInicialCuotaRepoblacion, validartxtnumeroInternoInicialCuotaRepoblacion);
                var validacionchksEsAprovechamiento = validar('', validacionEsAprovechamiento, true);
                var validaciontxtnumeroInternoFinalCuotaRepoblacion = validar(txtnumeroInternoFinalCuotaRepoblacion, validartxtnumeroInternoFinalCuotaRepoblacion);
                if (validartxtAnioProduccionEspecimen && validartxtTotalPoblacion
                    && validartxtPoblacionDispCupos && validartxtIndividuasRepoblacion && validartxtCuposAprovechamientoOtorgados && validacionchksEsAprovechamiento
                    && validacionchksTipoMarcaje && validacionDocSoporte && validacionsltPagoCuotaRepoblacion && validaciontxtFechaRadicado && validaciontxtnumeroInternoInicialCuotaRepoblacion
                    && validaciontxtnumeroInternoFinalCuotaRepoblacion && validartxtNumeroMortalidad) {
                    return true;
                }

                if (!validartxtAnioProduccionEspecimen) {
                    camposObligatorios.push('Año de producción');
                }
                if (!validartxtTotalPoblacion) {
                    camposObligatorios.push('Total de población');
                }
                if (!validartxtPoblacionDispCupos) {
                    camposObligatorios.push('Población disponible para cupos');
                }
                if (!validartxtIndividuasRepoblacion) {
                    camposObligatorios.push('Individuos destinados a repoblaciòn');
                }
                if (!validartxtCuposAprovechamientoOtorgados) {
                    camposObligatorios.push('Cupos de Aprovechamiento y Comercialización');
                }
                if (!validacionchksEsAprovechamiento) {
                    camposObligatorios.push('Cuota de repoblaciòn es para aprovechamiento');
                }
                if (!validacionchksTipoMarcaje) {
                    camposObligatorios.push('Tipo de marcaje');
                }
                if (!validacionDocSoporte) {
                    camposObligatorios.push('Documentos de Soporte');
                }
                if (!validacionsltPagoCuotaRepoblacion) {
                    camposObligatorios.push('Pago de cuota de repoblación');
                }
                if (!validaciontxtFechaRadicado) {
                    camposObligatorios.push('Fecha de pago de couta de repoblación');
                }
                if (!validaciontxtnumeroInternoInicialCuotaRepoblacion) {
                    camposObligatorios.push('N° Interno inicial cuota de repoblación');
                }
                if (!validaciontxtnumeroInternoFinalCuotaRepoblacion) {
                    camposObligatorios.push('N° Interno final cuota de repoblación');
                }
                if (!validartxtNumeroMortalidad) {
                    camposObligatorios.push('Numero de mortalidad no debe ser mayor a la cantidad de cupos que se otorgaron');
                }

                alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);

                return false;
            }

            if (validartxtAnioProduccionEspecimen && validartxtTotalPoblacion
                && validartxtPoblacionDispCupos && validartxtIndividuasRepoblacion && validartxtCuposAprovechamientoOtorgados
                && validacionchksTipoMarcaje && validacionDocSoporte && validartxtNumeroMortalidad) {
                return true;
            }

            if (!validartxtAnioProduccionEspecimen) {
                camposObligatorios.push('Año de producción');
            }
            if (!validartxtTotalPoblacion) {
                camposObligatorios.push('Total de población');
            }
            if (!validartxtPoblacionDispCupos) {
                camposObligatorios.push('Población disponible para cupos');
            }
            if (!validartxtIndividuasRepoblacion) {
                camposObligatorios.push('Individuos destinados a repoblaciòn');
            }
            if (!validartxtCuposAprovechamientoOtorgados) {
                camposObligatorios.push('Cupos de Aprovechamiento y Comercialización');
            }
            if (!validacionchksTipoMarcaje) {
                camposObligatorios.push('Tipo de marcaje');
            }
            if (!validacionDocSoporte) {
                camposObligatorios.push('Documentos de Soporte');
            }
            if (!validartxtNumeroMortalidad) {
                camposObligatorios.push('Numero de mortalidad no debe ser mayor a la cantidad de cupos que se otorgaron');
            }

            alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);

            return false;
        }
        idListAdvertencia.innerHTML = '';
        CuposPorAnio.forEach(el => {
            var normbreEspecie;
            especies.forEach(esp => {
                if (esp.id == el.codigoEspecie) {
                    normbreEspecie = esp.text;
                }
            });
            if (!el.seRegistroEspecieComercializar) {
                idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> No se registro especie a comercializar para el año ${el.anio} y especie ${normbreEspecie}</p></li>`;
            }
                
            if($(txtFechaResolucion).val()!=''){
                var fecha = new Date($(txtFechaResolucion).val());
                fecha.setDate(fecha.getDate()+ 1);
                var añoEmisionResolucion = fecha.getFullYear();
                if(parseInt(el.anio)>parseInt(añoEmisionResolucion)){
                    idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> El año de producion no puede ser mayor al año de emision de resolucion para el año ${el.anio} y especie ${normbreEspecie}</p></li>`;
                }
            }
            
            if (res != null && res != undefined && res.length > 0 && !accionEditar) {
                res.forEach(ele => {
                    if (ele.codigoEspecie == el.codigoEspecie && ele.anioProduccion == el.anio) {
                        idListAdvertencia.innerHTML += `<li class="li-mensaje-error mb-1"><p><span class="fas fa-times-circle"></span> Ya se realizo un registro para la misma especie en el año ${ele.anioProduccion}</li>`;
                    }
                });
            }
        });
        

        var validarRegistroEspeciesComercializar = true;
        if (idListAdvertencia.innerHTML != '') {
            validarRegistroEspeciesComercializar = false;
        }
        var validartxtAutoridadEmiteResolucion = validar(txtAutoridadEmiteResolucion, validaciontxtAutoridadEmiteResolucion);
        var validartxtCodigoZoocriadero = validar(txtCodigoZoocriadero, validaciontxtCodigoZoocriadero);
        var validartxtnumeroResolucion = validar(txtnumeroResolucion, validacionNumeroResolucion);
        var validartxtFechaResolucion = validar(txtFechaResolucion, validacionFechaResolucion);
        var validartxtFechaRegistroResolucion = validar(txtFechaRegistroResolucion, validacionFechaRegistroResolucion);
        var validarCuposPorAnio = validar(null, validacionCuposAnioProduccion, true);
        if (validartxtnumeroResolucion && validartxtFechaResolucion && validarRegistroEspeciesComercializar
            && validarCuposPorAnio && validartxtAutoridadEmiteResolucion && validartxtCodigoZoocriadero
            && validartxtFechaRegistroResolucion) {
            return true;
        }

        if (!validartxtAutoridadEmiteResolucion) {
            camposObligatorios.push('Autoridad ambiental que emite reolución');
        }
        if (!validartxtCodigoZoocriadero) {
            camposObligatorios.push('código de zoocriadero');
        }
        if (!validartxtnumeroResolucion) {
            camposObligatorios.push('Numero de Resolución');
        }
        if (!validartxtFechaResolucion) {
            validacionFechaResolucion.innerText='Campo obligatorio';
            camposObligatorios.push('Fecha de emisión de la resolución');
        }
        if (!validartxtFechaRegistroResolucion) {
            camposObligatorios.push('Fecha de registro resolución');
        }
        if (!validarCuposPorAnio) {
            camposObligatorios.push('Debe registrar al menos una especie a comercializar');
        }

        if(camposObligatorios.length>0){
            alertasValidacionesControles('#modalAlerta', ulCamposOblgatorios, camposObligatorios);
        }

        return false;
    }

    //se valida si los elementos estan vacios
    function validar(elemento, span, val = false, elemento2 = null) {
        // se valida si se agregaron cupos por año
        if (elemento == null && val && !accionEditar) {
            if (CuposPorAnio.length == 0) {
                ocultarElemento(span, false);
                return false
            }
        }
        // se valida si se marcaron tipos de marcaje
        if (elemento == null && !val) {
            if (tiposMarcajeSeleccionados.length == 0) {
                ocultarElemento(span, false);
                return false
            }
        }
        //se valida si alguno de los checks de es aprovechamiento esta seleccionado
        if (elemento == '' && val) {
            if ($(chkSiEsAprovechamiento).is(':checked')) {
                return true;
            }
            if ($(chkNoEsAprovechamiento).is(':checked')) {
                return true;
            }
            ocultarElemento(span, false);
            return false;
        }
        //se validan elementos de input normales si estan llenos
        if (elemento != null) {
            if ($(elemento).val() == null || $(elemento).val() == '' || $(elemento).val() == '0' || $(elemento).val() == 0 || $(elemento).val().length == 0) {
                ocultarElemento(span, false);
                if (elemento2 != null) {
                    if (!elemento2.hasClass('required-validate')) {
                        elemento2.addClass('required-validate');
                    }
                    return false;
                }
                if (!$(elemento).hasClass('required-validate')) {
                    $(elemento).addClass('required-validate');
                }
                return false;
            }
        }
        return true;
    }

    //filtro buscar resolucion
    function buscarResolucion() {
        visualizarFondoProcesando();
        if ($(txtResolutionNumbre).val() != '') {
            loadTablaResolucionAsignacionCupos($(txtResolutionNumbre).val());
            ocultarFondoProcesando();
            return;
        }
        loadTablaResolucionAsignacionCupos();
        ocultarFondoProcesando();
    }

    //funcion que realiza la eliminacion de el registro 
    async function SiEliminar() {
        visualizarFondoProcesando();
        limpiarModalConfirmaciones();
        ocultarElemento(divSpinner3, false);
        ocultarElemento(divregistrarResolucion, true);
        ocultarElemento(btnSiguienteRegistrarResolucion, true);
        LimpiarTodo(true);
        accionEditar = false;
        accionVer = false;
        accionGuardar = false;
        var url = `@Url.Action("DisableResolution", "RegistrarResolucion")` + `?quotaCode=${idEliminarResolucion}`;
        let resp = await Get(url);       
        if (resp.volverInicio != undefined) {
             ocultarFondoProcesando();
            $('#modalConfimaciones').modal('hide');
            cerrarSesionCaducada();
            return;
        }
        loadTablaResolucionAsignacionCupos();
        ocultarElemento(divSpinner3, true);
        limpiarModalConfirmaciones();
        ocultarElemento(divConfirmacionMensaje, false);
        lblConfirmacion.innerText = 'Su información ha sido eliminada con éxito';
        ocultarElemento(divBotonAceptarConfirmacion, false);
        ocultarFondoProcesando();
    }

    //ocultas los elementos HTML del modal que se usa para las confirmaciones
    function limpiarModalConfirmaciones() {
        ocultarElemento(divBtnSiEliminar, true);
        ocultarElemento(divBotonesConfirmacion, true);
        ocultarElemento(divBotonAceptarConfirmacion, true);
        ocultarElemento(divSpinner3, true);
        ocultarElemento(divConfirmacionMensaje, true);
        ocultarElemento(divBtnSiGuardar, true);
        ocultarElemento(divBtnSiEliminarAgregado, true);
        ocultarElemento(divBtnSiLimpiarEspecieExportar, true);
    }

    //funcion donde cada control se hace de solo lectura
    function soloLeerControles(validar = false) {
        if (!validar) {
            disabledControl(txtAutoridadEmiteResolucion, true);
            readOnly(txtCodigoZoocriadero, true);
            readOnly(txtnumeroResolucion, true);
            readOnly(txtFechaResolucion, true);
            readOnly(txtTotalCuposOtorgados, true);
            readOnly(txtAnioProduccion, true);
            readOnly(txtCuposRegistrar, true);
            readOnly(txtCuotaRepoblacion, true);
            readOnly(txtObservaciones, true);
            disabledControl(sltTipoEspecimenValido, true);
        }

        $(".check").prop("disabled", true);
        readOnly(txtNombreEspecie, true);
        readOnly(txtMarcaLote, true);
        readOnly(txtCondicionesMarcaje, true);
        readOnly(txtMachos, true);
        readOnly(txtHembras, true);
        readOnly(txtTotalPoblacion, true);
        readOnly(txtSalioIncubadora, true);
        readOnly(txtPoblacionDispCupos, true);
        readOnly(txtTasaReposicion, true);
        readOnly(txtNumeroMortalidad, true);

        disabledControl(CheckSeRealizoPagoCuotaRepoblacion, true);
        disabledControl(sltPagoCuotaRepoblacion, true);
        readOnly(txtCuposAprovOtorgPagada, true);
        readOnly(txtFechaRadicado, true);
        disabledControl(formFileSoporte, true);
        readOnly(txtObservacionesEspecieExportar, true);
        ocultarElemento(fileContenedorMultipleFile, true);
    }

    //funcion para reiniciar controles de solo lectura
    function reiniciarSoloLeerControles(validar = false) {
        if (!validar) {
            disabledControl(txtAutoridadEmiteResolucion, false);
            readOnly(txtCodigoZoocriadero, false);
            readOnly(txtnumeroResolucion, false);
            readOnly(txtFechaResolucion, false);
            readOnly(txtTotalCuposOtorgados, false);
            readOnly(txtAnioProduccion, false);
            readOnly(txtCuposRegistrar, false);
            readOnly(txtCuotaRepoblacion, false);
            readOnly(txtObservaciones, false);
            disabledControl(sltTipoEspecimenValido, false);
        }
        $(".check").prop("disabled", false);
        readOnly(txtNombreEspecie, false);
        readOnly(txtMarcaLote, false);
        readOnly(txtCondicionesMarcaje, false);
        readOnly(txtMachos, false);
        readOnly(txtHembras, false);
        readOnly(txtSalioIncubadora, false);
        readOnly(txtPoblacionDispCupos, false);
        readOnly(txtTasaReposicion, false);
        readOnly(txtNumeroMortalidad, false);

        disabledControl(CheckSeRealizoPagoCuotaRepoblacion, false);
        disabledControl(sltPagoCuotaRepoblacion, false);
        readOnly(txtCuposAprovOtorgPagada, false);
        readOnly(txtFechaRadicado, false);
        disabledControl(formFileSoporte, false);
        readOnly(txtObservacionesEspecieExportar, false);
        ocultarElemento(fileContenedorMultipleFile, false);
    }

    //se llenan los controles al editar o ver datos 
    async function llenarControles(datos) {

        if (datos.especiesExportar != null && datos.resolucionInfo != null) {
            CuposPorAnio.push(datos.especiesExportar);
            if (accionEditar) {
                datos.especiesExportar.documentosSoporte.forEach(doc => {
                    adjuntosOriginal.push(doc);
                });
            }
            $(txtAutoridadEmiteResolucion).val(datos.resolucionInfo.autoridadEmiteResolucion);
            $(txtCodigoZoocriadero).val(datos.resolucionInfo.codigoZoocriadero);
            $(txtnumeroResolucion).val(datos.resolucionInfo.numeroResolucion);
            $(txtFechaResolucion).val(moment(datos.resolucionInfo.fechaResolucion).format('yyyy-MM-DD'));
            $(txtFechaRegistroResolucion).val(moment(datos.resolucionInfo.fechaRegistroResolucion).format('yyyy-MM-DD'));
            $(txtObservaciones).val(datos.resolucionInfo.observaciones);

            RegistrarResolucion(true);
        }

    }

    //guardar o edita registro reolucion
    function guardarRegistrarResolucion() {
        limpiarModalConfirmaciones();
        if (validarCampos()) {
            if ($('#btnNoConfimar').hasClass('btn btn-primary')) {
                $('#btnNoConfimar').removeClass('btn btn-primary');
                $('#btnNoConfimar').addClass('btn btn-secondary');
            }
            lblConfirmacion.innerText = '¿Está seguro que desea guardar la información?';
            ocultarElemento(divConfirmacionMensaje, false);
            ocultarElemento(divBotonesConfirmacion, false);
            ocultarElemento(divBtnSiGuardar, false);
            $('#modalConfimaciones').modal('show');
        }
    }

    function noConfirmaciones() {
        if ($('#btnNoConfimar').hasClass('btn btn-secondary')) {
            $('#btnNoConfimar').removeClass('btn btn-secondary');
            $('#btnNoConfimar').addClass('btn btn-primary');
        }
    }

    async function siGuardarInformacion() {
        visualizarFondoProcesando();
        noConfirmaciones();
        limpiarModalConfirmaciones();
        ocultarElemento(divSpinner3, false);

        idListAdvertencia.innerHTML = '';
        tiposMarcajeSeleccionados = [];
        let checkboxes = document.querySelectorAll('input[name="tiposMarcas"]:checked');
        checkboxes.forEach((el) => {
            tiposMarcajeSeleccionados.push(el.value);
        });
        var datoGuardar;
        var datos;
        let url = '';
        if (accionEditar) {
            datoGuardar = {
                'codigoCupo': parseInt(idCupoEditar),
                'autoridadEmiteResolucion': $(txtAutoridadEmiteResolucion).val(),
                'codigoZoocriadero': $(txtCodigoZoocriadero).val(),
                'numeroResolucion': $(txtnumeroResolucion).val(),
                'fechaResolucion': $(txtFechaResolucion).val(),
                'fechaRegistroResolucion': $(txtFechaRegistroResolucion).val(),
                'observaciones': $(txtObservaciones).val(),
                'nitEmpresa': nitEmpresa
            };
            datos = {
                'datoGuardar': datoGuardar,
                'datosEspecieExportarNuevo': CuposPorAnio
            }

            url = `@Url.Action("EditaEliminarResolucionEspecieExportar","RegistrarResolucion")`;

        } else {
            datoGuardar = {
                'autoridadEmiteResolucion': $(txtAutoridadEmiteResolucion).val(),
                'codigoZoocriadero': $(txtCodigoZoocriadero).val(),
                'numeroResolucion': $(txtnumeroResolucion).val(),
                'fechaResolucion': $(txtFechaResolucion).val(),
                'fechaRegistroResolucion': $(txtFechaRegistroResolucion).val(),
                'observaciones': $(txtObservaciones).val(),
                'nitEmpresa': nitEmpresa
            };
            datos = {
                'datoGuardar': datoGuardar,
                'datosEspecieExportarNuevo': CuposPorAnio
            };
            url = `@Url.Action("GuardarResolucionEspecieExportar","RegistrarResolucion")`;

        }
        let val = await Get(url, datos);
        ocultarFondoProcesando();
        if (val.volverInicio != undefined) {
            $('#modalConfimaciones').modal('hide');
            cerrarSesionCaducada();
            return;
        }
        if (val) {

            ocultarElemento(divregistrarResolucion, true);
            ocultarElemento(btnSiguienteRegistrarResolucion, true);
            LimpiarTodo(true);
            loadResolucion();

            ocultarElemento(divSpinner3, true);
            limpiarModalConfirmaciones();
            ocultarElemento(divConfirmacionMensaje, false);
            lblConfirmacion.innerText = 'Su información ha sido guardada con éxito';
            ocultarElemento(divBotonAceptarConfirmacion, false);
            return;
        }
        ocultarElemento(divSpinner3, true);
        limpiarModalConfirmaciones();
        ocultarElemento(divConfirmacionMensaje, false);
        lblConfirmacion.innerText = 'No se guardo su información';
        ocultarElemento(divBotonAceptarConfirmacion, false);
    }

    function reiniciarDatosCuotaRepoblacion() {
        reiniciarElementos(sltPagoCuotaRepoblacion, validarsltPagoCuotaRepoblacion);
        reiniciarElementos(txtFechaRadicado, validartxtFechaRadicado);
        reiniciarElementos(txtnumeroInternoInicialCuotaRepoblacion, validartxtnumeroInternoInicialCuotaRepoblacion);
        reiniciarElementos(txtnumeroInternoFinalCuotaRepoblacion, validartxtnumeroInternoFinalCuotaRepoblacion);
        ocultarElemento(validacionEsAprovechamiento, true);
    }

    function limpiarDatosCuotaRepoblacion() {
        $(sltPagoCuotaRepoblacion).val('0');
        $(txtCuposAprovOtorgPagada).val('');
        $(txtFechaRadicado).val('');
        $(txtnumeroInternoInicialCuotaRepoblacion).val('');
        $(txtnumeroInternoFinalCuotaRepoblacion).val('');
    }

    function reinicioCancelarElementos() {
        reiniciarDatosCuotaRepoblacion();
        reiniciarElementos(txtAutoridadEmiteResolucion, validaciontxtAutoridadEmiteResolucion);
        reiniciarElementos(txtCodigoZoocriadero, validaciontxtCodigoZoocriadero);
        reiniciarElementos(txtnumeroResolucion, validacionNumeroResolucion);
        reiniciarElementos(txtFechaResolucion, validacionFechaResolucion);
        reiniciarElementos(txtFechaRegistroResolucion, validacionFechaRegistroResolucion);
        reiniciarElementos(txtTotalCuposOtorgados, validacionTotalCuposOtorgados);
        reiniciarElementos(txtAnioProduccion, validaciontxtAnioProduccion);
        reiniciarElementos(txtCuposRegistrar, validaciontxtCuposRegistrar);
        reiniciarElementos(txtNombreEspecie, validacionNombreEspecie);
        reiniciarElementos($('.select2-selection'), validacionTipoEspecimenValido);
        reiniciarElementos($(txtAnioProduccionEspecimen), validacionAnioProduccionEspecimen);
        ocultarElemento(validacionTipoMarcaje, true);
        reiniciarElementos(txtPoblacionDispCupos, validacionPoblacionDispCupos);
        reiniciarElementos(txtIndividuasRepoblacion, validacionIndividuasRepoblacion);
        reiniciarElementos(txtCuposAprovechamientoOtorgados, validacionCuposAprovechamientoOtorgados);
        reiniciarElementos(formFileSoporte, spanAdjuntos);

        reiniciarElementos(txtTotalPoblacion, validacionTotalPoblacion);
        ocultarElemento(validacionCuposAnioProduccion, true);
    }

    function limpiarEspecieExportarTodo() {
        modalConfirmacionesValidacion("¿Esta seguro que desea regresar?");
    }

    function modalConfirmacionesValidacion(mensajeValidacion) {
        limpiarModalConfirmaciones();
        lblConfirmacion.innerText = mensajeValidacion;
        ocultarElemento(divBtnSiLimpiarEspecieExportar, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divConfirmacionMensaje, false);
        $("#modalConfimaciones").modal("show");
    }

    function siLimpiarEspecieExportar() {
        RegresarFormEspecieExportar();
        ocultarElemento(btnSiguiente, false);
        if (!accionVer) {
            ocultarElemento(btnGuardarRegistrarResolucion, false);
        }
        tituloAccionEspecieExportar.innerText = 'Registrar especie a comercializar';
        loadTabs(2);
        ocultarElemento(tab3Input, true);
        $("#modalConfimaciones").modal("hide");
    }
    function RegresarFormEspecieExportar() {
        limpiarEspecieExportar();
        reinicioCancelarElementos();
        reiniciarSoloLeerControles(true);
        accionEditarEspecieExportar = false;
        accionVerEspecieExportar = false;
        btnSiguiente.innerText = 'Anterior';
        btnAgregar.innerText = 'Guardar';
        ocultarElemento(btnAgregar, false);
    }

    //llena los controles de especie a comercializar
    function llenarEspeciExportarControles(especieEditar) {
        ocultarElemento(btnAgregar, false);
        ocultarElemento(btnLimpiarEspecie, false);
        if (accionEditarEspecieExportar) {
            btnAgregar.innerText = 'Editar';
        }
        if (accionVerEspecieExportar) {
            ocultarElemento(btnAgregar, true);
        }

        if (especieEditar.sePagoCuotaRepoblacion) {
            $(CheckSeRealizoPagoCuotaRepoblacion).prop("checked", true);
            ocultarElemento(divCuotaRepoblacion, false);
        } else {
            $(CheckSeRealizoPagoCuotaRepoblacion).prop("checked", false);
            ocultarElemento(divCuotaRepoblacion, true);
        }
        //region comentado asignacion de campos
        var tipoMarcaje = especieEditar.codigoParametricaTipoMarcaje.split("|");
        tipoMarcaje.forEach(el => {
            var element = parseInt(el);
            $(`#check${element}`).prop("checked", true)
        });
        $(txtNombreEspecie).val(especieEditar.tipoEspecimen);
        $(sltEspecimen).val(especieEditar.codigoEspecie).trigger('change');
        $(txtAnioProduccionEspecimen).val(especieEditar.añoProduccion);
        $(txtMarcaLote).val(especieEditar.marcaLote);
        $(txtCondicionesMarcaje).val(especieEditar.condicionesMarcaje);
        $(txtMachos).val(especieEditar.poblacionParentalMacho);
        $(txtHembras).val(especieEditar.poblacionParentalHembra);
        $(txtTotalPoblacion).val(especieEditar.poblacionParentalTotal);
        $(txtSalioIncubadora).val(especieEditar.poblacionSalioDeIncubadora);
        $(txtPoblacionDispCupos).val(especieEditar.poblacionDisponibleParaCupos);
        $(txtIndividuasRepoblacion).val(especieEditar.individuosDestinadosARepoblacion);
        $(txtCuposAprovechamientoOtorgados).val(especieEditar.cupoAprovechamientoOtorgados);
        $(txtTasaReposicion).val(especieEditar.tasaReposicion);
        $(txtNumeroMortalidad).val(especieEditar.numeroMortalidad);
        if (especieEditar.cuotaRepoblacionParaAprovechamiento) {
            $(chkSiEsAprovechamiento).prop('checked', true);
        } else {
            $(chkNoEsAprovechamiento).prop('checked', true);
        }
        $(sltPagoCuotaRepoblacion).val(especieEditar.codigoParametricaPagoCuotaDerepoblacion);
        $(txtCuposAprovOtorgPagada).val(especieEditar.cupoAprovechamientoOtorgadosPagados);
        $(txtFechaRadicado).val(moment(especieEditar.fechaRadicado).format('yyyy-MM-DD'));
        $(txtnumeroInternoInicialCuotaRepoblacion).val(especieEditar.numeroInternoInicialCuotaRepoblacion == 0 ? '' : especieEditar.numeroInternoInicialCuotaRepoblacion);
        $(txtnumeroInternoFinalCuotaRepoblacion).val(especieEditar.numeroInternoFinalCuotaRepoblacion == 0 ? '' : especieEditar.numeroInternoFinalCuotaRepoblacion);
        //llenar adjunto
        divAdjunto.innerHTML = '';
        adjuntosResolucion = especieEditar.documentosSoporte;
        especieEditar.documentosSoporte.forEach(el => {

            if (accionVerEspecieExportar) {
                divAdjunto.innerHTML +=
                    `<div class="row w-100 mt-2 contenerAdjuntos" id="divAdjunto${el.codigo}">
                        <div class="col-11">
                            <a type="buttton" class="btnPrevisualizar" id="btnPrevisualizar${el.codigo}">${el.nombreAdjunto}</a>
                        </div>
                    <div>`;
            } else {
                divAdjunto.innerHTML +=
                    `<div class="row w-100 mt-2 contenerAdjuntos" id="divAdjunto${el.codigo}">
                        <div class="col-11">
                            <a type="buttton" class="btnPrevisualizar" id="btnPrevisualizar${el.codigo}">${el.nombreAdjunto}</a>
                        </div>
                        <div class="text-end col-1">
                            <a type="button" class="btnEliminarAdjunto" id="btnEliminarAdjunto${el.codigo}"><span class="fas fa-times"></span></a>
                        <div>
                    <div>`;
            }
        });
        $(txtObservacionesEspecieExportar).val(especieEditar.observaciones);
    }
    //#endregion

    //#region eventos

    //evento boton eliminar tabla cupos por año
    $('#TableCuposPorAnio tbody').on('click', '.btnEliminarCupoAnio', function () {
        var id = parseInt($(this).parents("tr").find("td")[0].innerText);
        recargarTablaCuposAnio = true;
        CuposPorAnio = CuposPorAnio.filter(p => p.id != id);
        agregarRegistroCuposAnio();
    });

    //evento boton editar tabla cupos por año


    //toma valor de machos y lo sumo con el de hempra para el total
    txtMachos.addEventListener('change', function () {
        if ($(txtMachos).val() == '' || $(txtMachos).val() < 0) {
            $(txtMachos).val(0);
        }
        var total = parseInt($(txtMachos).val()) + parseInt($(txtHembras).val());
        $(txtTotalPoblacion).val(total);
        if (total != 0) {
            reiniciarElementos(txtTotalPoblacion, validacionTotalPoblacion);
        }
    });

    //toma valor de machos y lo sumo con el de hempra para el total
    txtHembras.addEventListener('change', function () {
        if ($(txtHembras).val() == '' || $(txtHembras).val() < 0) {
            $(txtHembras).val(0);
        }
        var total = parseInt($(txtMachos).val()) + parseInt($(txtHembras).val());
        $(txtTotalPoblacion).val(total);
        if (total != 0) {
            reiniciarElementos(txtTotalPoblacion, validacionTotalPoblacion);
        }
    });

    chkSiEsAprovechamiento.addEventListener('click', function () {
        ocultarElemento(validacionEsAprovechamiento, true);
    });

    chkNoEsAprovechamiento.addEventListener('click', function () {
        ocultarElemento(validacionEsAprovechamiento, true);
    });

    //#region  eventos para reiniciar controles sin mensaje de advertencia

    txtAutoridadEmiteResolucion.addEventListener('change', function () {
        reiniciarElementos(this, validaciontxtAutoridadEmiteResolucion);
    });

    txtCodigoZoocriadero.addEventListener('change', function () {
        reiniciarElementos(this, validaciontxtCodigoZoocriadero);
    });

    txtnumeroResolucion.addEventListener('change', function () {
        reiniciarElementos(this, validacionNumeroResolucion);
    });

    txtFechaRegistroResolucion.addEventListener('change', function () {
        reiniciarElementos(this, validacionFechaRegistroResolucion);
    });

    txtFechaResolucion.addEventListener('change', function () {
        reiniciarElementos(this, validacionFechaResolucion);
        if($(txtFechaResolucion).val() > $(txtFechaRegistroResolucion).val()){
            $(txtFechaResolucion).val('');
            validacionFechaResolucion.innerText='fecha emisión no puede ser mayor a la de registro';
            ocultarElemento(validacionFechaResolucion, false);
        }
    });

    txtTotalCuposOtorgados.addEventListener('change', function () {
        reiniciarElementos(this, validacionTotalCuposOtorgados);
    });

    $(txtAnioProduccion).on('change', function () {
        reiniciarElementos(this, validaciontxtAnioProduccion);
    });

    txtCuposRegistrar.addEventListener('change', function () {
        reiniciarElementos(this, validaciontxtCuposRegistrar);
        reiniciarElementos(txtNumeroInternoFinal, validaciontxtNumeroInternoFinal);
        reiniciarElementos(txtNumeroInternoInicial, validaciontxtNumeroInternoInicial);
        $(txtNumeroInternoFinal).val(parseInt($(txtCuposRegistrar).val()) + parseInt($(txtNumeroInternoInicial).val()) - 1);
        $(txtTotalCuposOtorgados).val($(txtCuposRegistrar).val() != '' ? $(txtCuposRegistrar).val() : 0);
    });

    txtNombreEspecie.addEventListener('change', function () {
        reiniciarElementos(this, validacionNombreEspecie);
    });

    $(sltTipoEspecimenValido).on('change', function () {
        reiniciarElementos($('.select2-selection'), validacionTipoEspecimenValido);
    });

    $(txtAnioProduccionEspecimen).on('change', function () {
        reiniciarElementos(this, validacionAnioProduccionEspecimen);
    });

    $('#divChecksTipoMarcaje').on('click', '.check', function () {
        ocultarElemento(validacionTipoMarcaje, true);
    });

    txtPoblacionDispCupos.addEventListener('change', function () {
        reiniciarElementos(this, validacionPoblacionDispCupos);
    });

    txtIndividuasRepoblacion.addEventListener('change', function () {
        reiniciarElementos(this, validacionIndividuasRepoblacion);
    });

    txtCuposAprovechamientoOtorgados.addEventListener('change', function () {
        reiniciarElementos(this, validacionCuposAprovechamientoOtorgados);
    });

    txtCuotaRepoblacion.addEventListener('change', function () {
        reiniciarElementos(this, validaciontxtCuotaRepoblacion);
    });

    txtFechaRadicado.addEventListener('change', function () {
        reiniciarElementos(this, validartxtFechaRadicado);
    });

    txtnumeroInternoInicialCuotaRepoblacion.addEventListener('change', function () {
        reiniciarElementos(this, validartxtnumeroInternoInicialCuotaRepoblacion);
    });

    txtnumeroInternoFinalCuotaRepoblacion.addEventListener('change', function () {
        reiniciarElementos(this, validartxtnumeroInternoFinalCuotaRepoblacion);
    });

    sltPagoCuotaRepoblacion.addEventListener('change', function () {
        reiniciarElementos(this, validarsltPagoCuotaRepoblacion);
        if ($(sltPagoCuotaRepoblacion).val() == "87") {
            $(chkNoEsAprovechamiento).prop('checked', true);
            $(chkSiEsAprovechamiento).prop('checked', false);
        } else {
            $(chkNoEsAprovechamiento).prop('checked', false);
            $(chkSiEsAprovechamiento).prop('checked', true);
        }
    });

    CheckSeRealizoPagoCuotaRepoblacion.addEventListener('change', async function () {
        var especieComercializar = CuposPorAnio.find(p => p.id == idCuposAnio);
        if ($(CheckSeRealizoPagoCuotaRepoblacion).is(':checked')) {
            if(!accionVerEspecieExportar){
                let numero = await validarNumeroMayorInterno();
                $(txtnumeroInternoInicialCuotaRepoblacion).val(numero);
                $(txtnumeroInternoFinalCuotaRepoblacion).val(parseInt($(txtnumeroInternoInicialCuotaRepoblacion).val()) + parseInt(especieComercializar.cuotaRepoblacion) - 1);
            }
            ocultarElemento(divCuotaRepoblacion, false);
            especieComercializar.sePagoCuotaRepoblacion = true;
            especieComercializar.totalCupos = parseInt(especieComercializar.cupos) + parseInt(especieComercializar.cuotaRepoblacion);
            $(txtCuposAprovOtorgPagada).val(especieComercializar.totalCupos);
        } else {
            if(!accionVerEspecieExportar){
                $(txtnumeroInternoInicialCuotaRepoblacion).val('');
                $(txtnumeroInternoFinalCuotaRepoblacion).val('');
            }
            ocultarElemento(divCuotaRepoblacion, true);
            especieComercializar.sePagoCuotaRepoblacion = false;
            especieComercializar.totalCupos = especieComercializar.cupos;
            $(txtCuposAprovOtorgPagada).val(especieComercializar.totalCupos);
            reiniciarDatosCuotaRepoblacion();
            limpiarDatosCuotaRepoblacion();
        }
    });

    $(txtNumeroMortalidad).on('change', function(){
        ocultarElemento(validaciontxtNumeroMortalidad, true);
        if ($(txtNumeroMortalidad).hasClass('required-validate')) {
            $(txtNumeroMortalidad).removeClass('required-validate');
        }
        if($(txtNumeroMortalidad).val()!=''){
            var cupo = CuposPorAnio.find(p=>p.id==idCuposAnio);
            if(parseInt($(txtNumeroMortalidad).val())>parseInt(cupo.cupos)){
                ocultarElemento(validaciontxtNumeroMortalidad, false);
                if (!$(txtNumeroMortalidad).hasClass('required-validate')) {
                    $(txtNumeroMortalidad).addClass('required-validate');
                }
            }
        }
    });

    //#endregion

    $('#TableResolucionesRegistradas tbody').on('click', '.btnEditarResolucion', async function () {
        reiniciarSoloLeerControles();
        ocultarElemento(divSpinner2, false);
        ocultarElemento(divregistrarResolucion, true);
        ocultarElemento(btnSiguienteRegistrarResolucion, true);
        ocultarElemento(divSoloRegistrarEspecies, true);
        ocultarElemento(btnGuardarRegistrarResolucion, false);
        tituloAccionResolucion.innerText = 'Editar resolución';
        LimpiarTodo(true);
        accionVer = false;
        accionEditar = true;
        accionGuardar = false;
        idCupoEditar = $(this).parents("tr").find("td")[0].innerText;
        var url = `@Url.Action("ConsultOneQuota", "RegistrarResolucion")` + `?quotaCode=${idCupoEditar}`;
        let resp = await Get(url);
        if (resp.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        llenarControles(resp);
        recargarTablaCuposAnio = true;
        agregarRegistroCuposAnio();
        ocultarElemento(divSpinner2, true);
    });

    $('#TableResolucionesRegistradas tbody').on('click', '.btnDetalle', async function () {
        ocultarElemento(divSpinner2, false);
        ocultarElemento(divregistrarResolucion, true);
        ocultarElemento(btnSiguienteRegistrarResolucion, true);
        ocultarElemento(divSoloRegistrarEspecies, true);
        ocultarElemento(btnGuardarRegistrarResolucion, true);
        LimpiarTodo(true);
        ocultarElemento(btnSalirResolucion, false);
        tituloAccionResolucion.innerText = 'Ver resolución';
        accionEditar = false;
        accionVer = true;
        accionGuardar = false;
        idCupoEditar = $(this).parents("tr").find("td")[0].innerText;
        var url = `@Url.Action("ConsultOneQuota", "RegistrarResolucion")` + `?quotaCode=${idCupoEditar}`;
        let resp = await Get(url);
        if (resp.volverInicio != undefined) {
            cerrarSesionCaducada();
            return;
        }
        llenarControles(resp);
        recargarTablaCuposAnio = true;
        agregarRegistroCuposAnio();
        soloLeerControles();
        ocultarElemento(divSpinner2, true);
    });

    $('#TableResolucionesRegistradas tbody').on('click', '.btnEliminarResolucion', function () {
        limpiarModalConfirmaciones();
        idEliminarResolucion = $(this).parents("tr").find("td")[0].innerText;
        lblConfirmacion.innerText = '¿Está seguro que desea eliminar la información?';
        ocultarElemento(divConfirmacionMensaje, false);
        ocultarElemento(divBotonesConfirmacion, false);
        ocultarElemento(divBtnSiEliminar, false);
        $('#modalConfimaciones').modal('show');
    });


    $('#formFileSoporte').on('change', async function () {
        reiniciarElementos(formFileSoporte, spanAdjuntos);
        ocultarElemento(spanAdjuntos, true);
        var dato_archivo = $('#formFileSoporte').prop("files")[0];
        var extencionesPermitidas = ["application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/pdf", "image/jpeg", "image/png"];
        var strExtenciones = ".pdf, .doc, .png, .jpeg";
        await mostrarAdjunto(dato_archivo, divAdjunto, spanAdjuntos, extencionesPermitidas, strExtenciones, null, adjuntosResolucion, true, adjuntosNuevo, adjuntosOriginal);
        $('#formFileSoporte').val('');
    });

    fileContenedorMultipleFile.addEventListener('dragover', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).addClass('activeFile');
    });

    fileContenedorMultipleFile.addEventListener('dragleave', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).removeClass('activeFile');
    });

    fileContenedorMultipleFile.addEventListener('drop', (e) => {
        e.preventDefault();
        ocultarElemento(spanAdjuntos, true);
        $(fileContenedorMultipleFile).removeClass('activeFile');
        var files = e.dataTransfer.files;
        var extencionesPermitidas = ["application/vnd.openxmlformats-officedocument.wordprocessingml.document", "application/pdf", "image/jpeg", "image/png"];
        var strExtenciones = ".pdf, .doc, .png, .jpeg";
        for (const file of files) {
            mostrarAdjunto(file, divAdjunto, spanAdjuntos, extencionesPermitidas, strExtenciones, null, adjuntosResolucion, true, adjuntosNuevo, adjuntosOriginal);
        };
        $('#formFileSoporte').val('');
    });

    $(divAdjunto).on('click', '.btnPrevisualizar', function (e) {
        var cadena = e.target.parentElement.firstElementChild.id;
        var id = cadena.replace(/btnPrevisualizar/i, "");
        var adjunto = adjuntosResolucion.find(p => p.codigo == parseInt(id));
        var newWindow = window.open();
        newWindow.document.write('<iframe src=' + adjunto.adjuntoBase64 + ' style="height:100%; width:100%;"></iframe>');
    });
    $(divAdjunto).on('click', '.btnEliminarAdjunto', function (e) {
        var cadena = e.target.parentElement.id;
        var id = cadena.replace(/btnEliminarAdjunto/i, "");
        var adjunto = adjuntosResolucion.find(p => p.codigo == parseInt(id));
        adjuntosResolucion = adjuntosResolucion.filter(p => p.codigo != adjunto.codigo);
        if (accionEditar) {
            adjuntosNuevo = adjuntosNuevo.filter(p => p.codigo != adjunto.codigo);
            adjuntoEliminar = adjuntosOriginal.find(p => p.codigo == adjunto.codigo);
            if (adjuntoEliminar != null && adjuntoEliminar != undefined) {
                adjuntosEliminar.push(adjunto);
            }
        }
        var hijo = document.getElementById(`divAdjunto${adjunto.codigo}`);
        divAdjunto.removeChild(hijo);
    });

    //#endregion

</script>
